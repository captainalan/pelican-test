<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Alan's Miscellaneous Stuff Blog</title><link href="https://captainalan.github.io/pelican-test/" rel="alternate"></link><link href="https://captainalan.github.io/pelican-test/feeds/all.atom.xml" rel="self"></link><id>https://captainalan.github.io/pelican-test/</id><updated>2019-07-20T00:00:00-07:00</updated><entry><title>Approaches to computing</title><link href="https://captainalan.github.io/pelican-test/approaches-to-computing.html" rel="alternate"></link><published>2019-07-20T00:00:00-07:00</published><updated>2019-07-20T00:00:00-07:00</updated><author><name>Alan Wong</name></author><id>tag:captainalan.github.io,2019-07-20:/pelican-test/approaches-to-computing.html</id><summary type="html">&lt;p&gt;Using mobile devices and tablets, there is often only one way really
to do things. The same goes for the interfaces of many video
games. There is a single way to do things like change settings,
enter/exit the application, etc.&lt;/p&gt;
&lt;p&gt;The same &lt;em&gt;cannot&lt;/em&gt; be said for many desktop/laptop …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Using mobile devices and tablets, there is often only one way really
to do things. The same goes for the interfaces of many video
games. There is a single way to do things like change settings,
enter/exit the application, etc.&lt;/p&gt;
&lt;p&gt;The same &lt;em&gt;cannot&lt;/em&gt; be said for many desktop/laptop computers. For
instance, to install programs on MS Windows or Mac OS, many users just
(manually) go download some installer file and install things. Other
users will make use of Microsoft/Apple's official stores to get their
apps. Finally, some users (usually programmers, developers) make use of 
&lt;strong&gt;package managers&lt;/strong&gt; to do this job.&lt;/p&gt;
&lt;p&gt;The different paths a user may take to do something like "install a
program" represent different approaches to computing, generally. For
instance, we might use some words to embody the three approaches for
installing listed above as:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;"Lemme get what I need to do"&lt;/li&gt;
&lt;li&gt;"Make it easy and make it feel official, please"&lt;/li&gt;
&lt;li&gt;"Tedious things should be automated"&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;A user of official app stores (2) &lt;/p&gt;
&lt;h2&gt;What I do these days&lt;/h2&gt;
&lt;p&gt;After hours, I boot up Linux (see my &lt;a href="https://captainalan.github.io/pelican-test/arch-linux-install-for-n00bs.html"&gt;Arch Linux install
guide&lt;/a&gt;),
launch emacs (see my &lt;a href="https://gist.github.com/captainalan/d2d94f8ff88ba0c74e85560246d51fdf"&gt;config
file&lt;/a&gt;,
and proceed to write code, prose, and everything in between.&lt;/p&gt;</content></entry><entry><title>Chairs suck.</title><link href="https://captainalan.github.io/pelican-test/chairs-suck.html" rel="alternate"></link><published>2019-07-20T00:00:00-07:00</published><updated>2019-07-20T00:00:00-07:00</updated><author><name>Alan Wong</name></author><id>tag:captainalan.github.io,2019-07-20:/pelican-test/chairs-suck.html</id><summary type="html">&lt;p&gt;I personally dislike using chairs most of the time. I'd rather sit on
the floor, stand, or walk around to work, reading, thinking,
socializing, etc. Strange? Seething in my dislike for chairs, I
decided to do a little "armchair" research on chairs to find out where
they came from and …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I personally dislike using chairs most of the time. I'd rather sit on
the floor, stand, or walk around to work, reading, thinking,
socializing, etc. Strange? Seething in my dislike for chairs, I
decided to do a little "armchair" research on chairs to find out where
they came from and why they are everywhere in WEIRD ("Western Educated
Industrial Rich Democratic") cultures.&lt;/p&gt;
&lt;p&gt;Did you know:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For many centuries, chairs were "a symbolic article of state and
  dignity rather than an article for ordinary use" (Wikipedia)&lt;/li&gt;
&lt;li&gt;The earliest images of chairs in China are from the sixth century,
  but even then sitting in chairs was rare (Wikipedia)&lt;/li&gt;
&lt;li&gt;Writing, multi-story buildings, paper money, and examinations all
    have a longer history than chairs in China!&lt;/li&gt;
&lt;li&gt;Chairs became mainstream in the West and spread especially fast
  during the time of the "Industrial Revolution" (Chair Institute)&lt;/li&gt;
&lt;li&gt;Nowadays, there are a lot of people &lt;a href="https://www.startstanding.org/sitting-new-smoking/"&gt;hating on
  "sitting"&lt;/a&gt;
  (i.e. chairs)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Dirty floors vs clean feet&lt;/h2&gt;
&lt;p&gt;Chairs are useful if you are wearing shoes, don't plan on taking them
off, and want to sit down. Note that it is nice to sit down on a bench
or chair to remove your footwear.&lt;/p&gt;
&lt;p&gt;Chairs are not so good if you want to sit on a rug or reach things
that are close to the floor. Removing sandals or slippers requires to
chairs.&lt;/p&gt;
&lt;p&gt;&lt;img alt="The Beatles observe George learning Sitar. July 1966." src="https://i.imgur.com/Ci5mHRE.jpg"&gt;&lt;br&gt;
(Source imgur)&lt;/p&gt;
&lt;h2&gt;Hot idea&lt;/h2&gt;
&lt;p&gt;Many common clothing items we wear were designed for purposes quite
unlike modern living. For example, long pants came from
horse-riding. Few people these days ride horses.&lt;/p&gt;
&lt;p&gt;Where I live (California), it is usually rather hot. Rather than
following dressing, eating, and sleeping habits of other hot climate
people, many (most?) Californians like to retreat to air conditioned
coffee shops and dress and act like they live in cooler European
(English/German/French?) places. Why?!&lt;/p&gt;
&lt;h2&gt;Good uses of chairs&lt;/h2&gt;
&lt;p&gt;Besides being required for being socially acceptable in a good many
places, there are a number of situations in which having a chair is
useful. To play the piano, for instance, it makes sense to sit on a
comfortably adjusted piano bench so you can reach the pedals under the
piano.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Doge cannot reach pedals" src="https://i.imgur.com/S6vXiNl.png"&gt;&lt;br&gt;
(Source imgur)&lt;/p&gt;
&lt;h2&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Wikipedia on &lt;a href="https://en.wikipedia.org/wiki/Chair"&gt;Chairs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Wikipedia on the &lt;a href="https://en.wikipedia.org/wiki/History_of_the_chair"&gt;History of the Chair&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://chairinstitute.com/history-of-the-chair/"&gt;"History of the
  Chair"&lt;/a&gt; from the
  Chair Institute&lt;/li&gt;
&lt;/ul&gt;</content></entry><entry><title>I choose HTML</title><link href="https://captainalan.github.io/pelican-test/i-choose-html.html" rel="alternate"></link><published>2019-07-20T00:00:00-07:00</published><updated>2019-07-20T00:00:00-07:00</updated><author><name>Alan Wong</name></author><id>tag:captainalan.github.io,2019-07-20:/pelican-test/i-choose-html.html</id><summary type="html">&lt;p&gt;Before, I built &lt;a href="https://captainalan.github.io/me"&gt;my website in
React&lt;/a&gt;. Now, it is being
&lt;a href="https://captainalan.github.io"&gt;rebuilt&lt;/a&gt; in plain HTML/CSS (with some
help from Bootstrap and jQuery to make things like mobile
responsiveness less tedious). After spending a considerable amount of
time with fancy frameworks, why take a step "backwards"?&lt;/p&gt;
&lt;h2&gt;I got blocked?!&lt;/h2&gt;
&lt;p&gt;I …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Before, I built &lt;a href="https://captainalan.github.io/me"&gt;my website in
React&lt;/a&gt;. Now, it is being
&lt;a href="https://captainalan.github.io"&gt;rebuilt&lt;/a&gt; in plain HTML/CSS (with some
help from Bootstrap and jQuery to make things like mobile
responsiveness less tedious). After spending a considerable amount of
time with fancy frameworks, why take a step "backwards"?&lt;/p&gt;
&lt;h2&gt;I got blocked?!&lt;/h2&gt;
&lt;p&gt;I was trying out some different Linux distributions, and decided to
give the fully-free distro &lt;a href="https://trisquel.info"&gt;Trisquel&lt;/a&gt; a spin.
To my dismay, I found that &lt;a href="http://captainalan.github.io/me"&gt;&lt;em&gt;my own
site&lt;/em&gt;&lt;/a&gt; was blocked blocked for some
JavaScript-y reasons. It turns out that all sites that make use of
React (or at least &lt;code&gt;create-react-app&lt;/code&gt;, the tool I used to bootstrap my
site) are &lt;em&gt;blocked&lt;/em&gt; when &lt;a href="https://www.gnu.org/software/librejs/"&gt;certain sorts of
JavaScript&lt;/a&gt; are blocked.&lt;/p&gt;
&lt;p&gt;It is my goal to produce informative, unobtrusive websites that are
easily indexed, linked, downloaded, etc. If I can accomplish this goal
without freedom/privacy threatening software, why not choose simpler
tools?&lt;/p&gt;
&lt;h2&gt;Next steps&lt;/h2&gt;
&lt;p&gt;I am becoming more interested in &lt;strong&gt;static site generators&lt;/strong&gt; (such as
&lt;a href="https://blog.getpelican.com"&gt;Pelican&lt;/a&gt;, which was used to make this
site) because the HTML/CSS they spit out is compatible in most places
and they also make things like RSS feeds easy to do. I'll be trying
out various static generators in addition to writing plain HTML/CSS
and maybe some JavaScript.&lt;/p&gt;</content></entry><entry><title>Arch Linux Install for n00bs</title><link href="https://captainalan.github.io/pelican-test/arch-linux-install-for-n00bs.html" rel="alternate"></link><published>2019-06-02T00:00:00-07:00</published><updated>2019-06-02T00:00:00-07:00</updated><author><name>Alan Wong</name></author><id>tag:captainalan.github.io,2019-06-02:/pelican-test/arch-linux-install-for-n00bs.html</id><summary type="html">&lt;p&gt;In this tutorial, I will go through installing Arch Linux. These
instructions were tried out on both a virtual machine and an old
laptop. For further instructions and details, I recommend &lt;em&gt;resisting
the urge to reflexively search everything&lt;/em&gt;, and instead taking the
time to read through high-quality resources, such as …&lt;/p&gt;</summary><content type="html">&lt;p&gt;In this tutorial, I will go through installing Arch Linux. These
instructions were tried out on both a virtual machine and an old
laptop. For further instructions and details, I recommend &lt;em&gt;resisting
the urge to reflexively search everything&lt;/em&gt;, and instead taking the
time to read through high-quality resources, such as the (official)
Arch Wiki &lt;a href="https://wiki.archlinux.org/index.php/Installation_guide"&gt;installation
guide&lt;/a&gt;.  That
being said, the content in this article should be sufficient to get an
Arch System up and running&amp;em;I've used it multiple times to help me
setup new systems.&lt;/p&gt;
&lt;p&gt;I am closely following &lt;a href="https://www.youtube.com/watch?v=4PBqpX0_UOc"&gt;Full Arch Linux Install (SAVAGE Edition!)
Linux&lt;/a&gt; by Luke Smith (March 8,
2018).&lt;/p&gt;
&lt;p&gt;We will do a base installation of Arch Linux. Then we'll run &lt;a href="https://lukesmith.xyz"&gt;Luke
Smith's&lt;/a&gt; &lt;a href="https://larbs.xyz/"&gt;LARBS&lt;/a&gt; script to
get an awesome i3 tiling window manager setup from the outset.  (TODO:
Also -&amp;gt; Add instructions/links to a &lt;strong&gt;NEW&lt;/strong&gt; tutorial about getting a
Desktop Environment, emacs, etc. and choosing a different path).&lt;/p&gt;
&lt;h2&gt;Prerequisites&lt;/h2&gt;
&lt;p&gt;This tutorial is aimed at people with some exposure to Linux and/or command
line tools (e.g. using &lt;code&gt;brew&lt;/code&gt; under MacOS), but who would like to gain
greater control of their current computing setups. Here, I honor the maxim
that &lt;em&gt;knowledge is power&lt;/em&gt; and seek to empower you by getting you started
using Arch Linux and understanding the tools that you are using.&lt;/p&gt;
&lt;p&gt;You should know how to do basic things with &lt;code&gt;vi&lt;/code&gt; (or &lt;code&gt;vim&lt;/code&gt;, or some
other editor readily available in the
&lt;a href="https://en.wikipedia.org/wiki/Computer_terminal#Text_terminals"&gt;TTY&lt;/a&gt;,
such as &lt;code&gt;nano&lt;/code&gt;) because doing an Arch install will involve editing
some text files on the command line.&lt;/p&gt;
&lt;h2&gt;Installation Medium&lt;/h2&gt;
&lt;p&gt;Download the latest Arch linux ISO. The easiest thing to do is probably to
download from an HTTP mirror near your (physical) location and then install by CD, DVD, or USB.&lt;/p&gt;
&lt;p&gt;From Windows, creating your installation medium is easy. Right click
on the downloaded &lt;code&gt;.iso&lt;/code&gt; file and select "Burn disc image" to create
CD or DVD to create a your installation medium. Alternatively, you can
use &lt;a href="https://rufus.ie/"&gt;Rufus&lt;/a&gt; on Windows to create install media on
USB drives, SD cards, and more.&lt;/p&gt;
&lt;h2&gt;Booting with the installation medium&lt;/h2&gt;
&lt;p&gt;Restart your computer. You may have to go into your system BIOS to make sure you can boot from your installation medium.&lt;/p&gt;
&lt;h3&gt;Get an internet connection&lt;/h3&gt;
&lt;p&gt;If you are already connected to the Internet via an ethernet cable, there is
nothing to think about. If you are connecting via Wi-Fi, run:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wifi-menu
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I can't help you anymore if you are connecting from McDonald's wifi... But on
a home network, you will be prompted for your Wi-Fi network's password.
Once you go through the options &lt;code&gt;wifi-menu&lt;/code&gt;, try out your network connection
with something like &lt;code&gt;ping google.com&lt;/code&gt;. Type &lt;code&gt;ctrl-c&lt;/code&gt; to exit when you are
done.&lt;/p&gt;
&lt;h3&gt;Time and date stuff&lt;/h3&gt;
&lt;p&gt;Run &lt;code&gt;timedatectl set-ntp true&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Note the 'prefix' &lt;em&gt;-ctl&lt;/em&gt; in the command above. Commands with &lt;em&gt;-ctl&lt;/em&gt;
have to do with &lt;em&gt;controlling&lt;/em&gt; system processes. A command we will see
later is
&lt;a href="https://wiki.archlinux.org/index.php/Systemd#Basic_systemctl_usage"&gt;&lt;code&gt;systemctl&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Partitioning your drive(s)&lt;/h2&gt;
&lt;p&gt;Now, let's partition our disks. &lt;strong&gt;Note&lt;/strong&gt;: I am assuming you are
installing Arch Linux on a computer you are OK with deleting all data
on. Go reboot and back up your files and stuff if you are not ready to
proceed yet.&lt;/p&gt;
&lt;p&gt;In any case you can, run &lt;code&gt;lsblk&lt;/code&gt; (or &lt;code&gt;fdisk -l&lt;/code&gt;) to "list all block
devices".&lt;/p&gt;
&lt;h3&gt;Creating new partitions&lt;/h3&gt;
&lt;p&gt;From &lt;code&gt;lsblk&lt;/code&gt;, you can identify the drive you want to install Arch Linux on.
This will probably be &lt;code&gt;/dev/sda&lt;/code&gt; if you are installing onto an old computer.&lt;/p&gt;
&lt;p&gt;Let's start changing things.  To begin, type &lt;code&gt;fdisk /dev/sda&lt;/code&gt;, where
'"&lt;code&gt;sda&lt;/code&gt;" corresponds to the &lt;strong&gt;drive&lt;/strong&gt; you wish to create a new
partition table on (don't do &lt;code&gt;fdisk /dev/sda123&lt;/code&gt;; this won't
work&amp;em;go ahead and try that if you don't believe me!).&lt;/p&gt;
&lt;p&gt;You will now be sent to a new prompt that looks something like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;Command&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;m&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;help&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;:
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If there are existing partitions you may need to type &lt;code&gt;d&lt;/code&gt; to delete them.
Type &lt;code&gt;p&lt;/code&gt; to print partitions. Once you are done deleting existing stuff, type
&lt;code&gt;n&lt;/code&gt; at the prompt to make a new partition.&lt;/p&gt;
&lt;p&gt;We will now create the following partitions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Boot partition (200MB)&lt;/li&gt;
&lt;li&gt;SWAP partition (how much RAM you have, times 1.5)&lt;/li&gt;
&lt;li&gt;Root (25 GB or more)&lt;/li&gt;
&lt;li&gt;Home (everything else)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;After typing &lt;code&gt;n&lt;/code&gt;, you will be be prompted with a number of options. To create
the Boot partition, accept the first default option (&lt;code&gt;p&lt;/code&gt;) to create a new
primary partition. Accept &lt;code&gt;1&lt;/code&gt; as the default partition number. Accept the
default "First sector" location. For the "Last sector", enter &lt;code&gt;+200M&lt;/code&gt;. This means will be the &lt;em&gt;boot&lt;/em&gt; partition which we are allocating 200 MB for.&lt;/p&gt;
&lt;p&gt;Next, we will craete a &lt;strong&gt;swap partition&lt;/strong&gt;. Type &lt;code&gt;n&lt;/code&gt; again to get started.
Standard practice is to create a swap partition of about 1.5-2 times the
amount of RAM you have. I'll be using 4 GB for this. Accept the default
partion number (probably 2), default first sector, and for the last sector do
&lt;code&gt;+4G&lt;/code&gt; (where you replace "4" with however much memory you select for your
swap partition).&lt;/p&gt;
&lt;p&gt;We will now create a &lt;strong&gt;root partition&lt;/strong&gt; where all your programs will be
installed. A reasonable starting size for this is around 25 GB, though you
may need more if you like to install a lot of programs. I'll be using 64 GB.
Typing &lt;code&gt;n&lt;/code&gt; (and then pressing Enter), I accept the default for the partiton
number and the starting sector and then select &lt;code&gt;+64G&lt;/code&gt; for the last sector.&lt;/p&gt;
&lt;p&gt;Finally, we need to create a &lt;strong&gt;home partition&lt;/strong&gt; which will take up the rest
of your disk. Do &lt;code&gt;n&lt;/code&gt; for a new partition and then selct &lt;code&gt;p&lt;/code&gt; (rather than &lt;code&gt;e&lt;/code&gt;)
to create a new primary partition. Then, accept all the defaults that follow.&lt;/p&gt;
&lt;p&gt;We have now created four nice partitions using &lt;code&gt;fdisk&lt;/code&gt;. However, these are
not "commited" to disk yet. Write &lt;code&gt;w&lt;/code&gt; at the &lt;code&gt;Command (m for help):&lt;/code&gt; prompt
to write your partitions to your disk. Note that this will wipe everything on the disk.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; since we partitioned our disk, you can easily install a different linux distribution if you wanted; just re-write the &lt;code&gt;root&lt;/code&gt; partition and all your &lt;code&gt;home&lt;/code&gt; files will still be there.&lt;/p&gt;
&lt;p&gt;Type &lt;code&gt;lsblk&lt;/code&gt; to see how &lt;code&gt;fdisk&lt;/code&gt; changed your harddirve.&lt;/p&gt;
&lt;h2&gt;Making filesystems&lt;/h2&gt;
&lt;p&gt;We just partitioned our disks, but we need to set &lt;strong&gt;filesystems&lt;/strong&gt; to our
partitions.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;boot&lt;/code&gt;, &lt;code&gt;root&lt;/code&gt;, and &lt;code&gt;home&lt;/code&gt; partition (&lt;code&gt;sda1&lt;/code&gt;, &lt;code&gt;sda3&lt;/code&gt;, and &lt;code&gt;sda4&lt;/code&gt; if you
have been following the tutorial for) should be formatted to &lt;code&gt;ext4&lt;/code&gt;, a Linux
standard.&lt;/p&gt;
&lt;p&gt;Do &lt;code&gt;mkfs.ext4 /dev/sda1&lt;/code&gt;, &lt;code&gt;mkfs.ext4 /dev/sda3&lt;/code&gt;, and &lt;code&gt;mkfs.ext4 /dev/sda4&lt;/code&gt; to
set these partitions' filesystems.&lt;/p&gt;
&lt;p&gt;Now, for the swap partition do &lt;code&gt;mkswap /dev/sda2&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;Mounting stuff&lt;/h2&gt;
&lt;p&gt;Now that we have created partitions with appropriate filesystems, we need to
&lt;strong&gt;mount&lt;/strong&gt; things.&lt;/p&gt;
&lt;p&gt;First, do &lt;code&gt;mount /dev/sda3 /mnt&lt;/code&gt; to mount your root partition.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; at any point during this tutorial you may want to run &lt;code&gt;lsblk&lt;/code&gt; to see
*how your disks currently look.&lt;/p&gt;
&lt;p&gt;Type &lt;code&gt;ls /mnt&lt;/code&gt;. You should see something like &lt;code&gt;lost+found&lt;/code&gt; there.&lt;/p&gt;
&lt;p&gt;Let's make make some new directories to mount stuff. First do
&lt;code&gt;mkdir /mnt/boot&lt;/code&gt; create a mount point for our boot partition. Then, run
&lt;code&gt;mount /dev/sda1 /mnt/boot&lt;/code&gt; to do the actual mounting.&lt;/p&gt;
&lt;p&gt;Finally, do &lt;code&gt;mkdir /mnt/home&lt;/code&gt;. Run &lt;code&gt;mount /dev/sda4 /mnt/home&lt;/code&gt; to mount your
home partition.&lt;/p&gt;
&lt;h2&gt;Installing the base system&lt;/h2&gt;
&lt;p&gt;We now have all of our partitions and have mounted these partitions on our
file systems. Mounting allows us to modify the data on these partitions,
which means we can install softare (like Arch Linux!).&lt;/p&gt;
&lt;p&gt;Run &lt;code&gt;lsblk&lt;/code&gt; to see that all is as it should be.&lt;/p&gt;
&lt;h3&gt;The fun starts with &lt;code&gt;pacstrap&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Run &lt;code&gt;pacstrap /mnt base base-devel&lt;/code&gt; to install the base package and basic
development tools. If you want more things, add them like so to this command.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pacstrap /mnt base base-devel vim emacs
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Running this command might take a while because it is installing an entire
base system.&lt;/p&gt;
&lt;h2&gt;Making an &lt;code&gt;fstab&lt;/code&gt; file&lt;/h2&gt;
&lt;p&gt;Earlier, we mounted a bunch of partitions manually. An &lt;code&gt;fstab&lt;/code&gt; file tells
Linux what to try to load (see &lt;code&gt;etc/fstab&lt;/code&gt;). Run &lt;code&gt;genfstab /mnt&lt;/code&gt;. This will
generate an &lt;code&gt;fstab&lt;/code&gt; file based on how &lt;code&gt;mnt&lt;/code&gt; looks. Running this command will
just output a bunch of stuff.&lt;/p&gt;
&lt;p&gt;We need to save these things to a file. Run
&lt;code&gt;genfstab -U /mnt &amp;gt;&amp;gt; /mnt/etc/fstab&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Now Arch Linux will know what goes where.&lt;/p&gt;
&lt;h2&gt;Making our installation bootable&lt;/h2&gt;
&lt;p&gt;Run &lt;code&gt;arch-chroot /mnt&lt;/code&gt; to change our root. This will change our Arch root to
our new &lt;code&gt;/mnt&lt;/code&gt; directory! Before, we were running from our installation
medium, now we are running from our actual installation!&lt;/p&gt;
&lt;h3&gt;I needs Interwebs&lt;/h3&gt;
&lt;p&gt;Let's install some stuff. First, let's install &lt;code&gt;NetworkManager&lt;/code&gt; by typing &lt;code&gt;pacman -S networkmanager&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Next, type &lt;code&gt;systemctl enable NetworkManager&lt;/code&gt; to start &lt;code&gt;NetworkManager&lt;/code&gt;
whenever you log in.&lt;/p&gt;
&lt;h3&gt;GRUB Bootloader&lt;/h3&gt;
&lt;p&gt;Run &lt;code&gt;pacman -S grub&lt;/code&gt; to install GRUB, our bootloader. This is important!&lt;/p&gt;
&lt;p&gt;After this finishes, run &lt;code&gt;grub-install --target=i386-pc /dev/sda&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Once this is done, do &lt;code&gt;grub-mkconfig -o /boot/grub/grub.cfg&lt;/code&gt; to make a config
file. (This might be done automatically.)&lt;/p&gt;
&lt;h3&gt;Setting a password&lt;/h3&gt;
&lt;p&gt;Run &lt;code&gt;passwd&lt;/code&gt; to set a root password.&lt;/p&gt;
&lt;h3&gt;Setting a locale&lt;/h3&gt;
&lt;p&gt;Use your text editor (here I use &lt;code&gt;vim&lt;/code&gt;) to edit &lt;code&gt;/etc/locale.gen&lt;/code&gt;. I do this
with &lt;code&gt;vim /etc/locale.gen&lt;/code&gt;. In this huge list of locales I uncommented&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;#&lt;/span&gt;&lt;span class="n"&gt;en_US&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;UTF&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt; &lt;span class="n"&gt;UTF&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;
&lt;span class="o"&gt;#&lt;/span&gt;&lt;span class="n"&gt;en_US&lt;/span&gt; &lt;span class="n"&gt;ISO&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;8859&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;to...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;en_US&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;UTF&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt; &lt;span class="n"&gt;UTF&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;
&lt;span class="n"&gt;en_US&lt;/span&gt; &lt;span class="n"&gt;ISO&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;8859&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;...in order to set my locale. Note, you can set multiple languages. Save and
exit this file.&lt;/p&gt;
&lt;p&gt;Next, run &lt;code&gt;locale-gen&lt;/code&gt; to read the conf file you just edited and generate a
file.&lt;/p&gt;
&lt;p&gt;Let's edit one more file to set our (default) language: &lt;code&gt;vim
/etc/locale.conf&lt;/code&gt;. I changed the contents of this file to:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;LANG&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;en_US&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;UTF&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Setting a timezone&lt;/h3&gt;
&lt;p&gt;By default, in &lt;code&gt;/etc/localtime&lt;/code&gt;, there are a bunch of time zones. We want to
link &lt;code&gt;/usr/share/zoneinfo/&lt;/code&gt; with our timezone.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;ln&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;sf&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;share&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;zoneinfo&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;America&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Los_Angeles&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;localtime&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;...where of course you replace &lt;code&gt;.../America/Los_Angles...&lt;/code&gt; with where you are.&lt;/p&gt;
&lt;p&gt;If you travel somewhere else, you will rerun the &lt;code&gt;ln...&lt;/code&gt; command here to the
timezone of wherever you are going.&lt;/p&gt;
&lt;h3&gt;Setting a hostname&lt;/h3&gt;
&lt;p&gt;Finally, you need to set a name for your computer. Edit &lt;code&gt;/etc/hostname&lt;/code&gt; to
whatever you like. I will do &lt;code&gt;vim /etc/hostname&lt;/code&gt; and enter &lt;code&gt;arch-sama&lt;/code&gt; for a (weeby) hostname.&lt;/p&gt;
&lt;h3&gt;Going back to your installation medium...&lt;/h3&gt;
&lt;p&gt;Type &lt;code&gt;exit&lt;/code&gt; to go back to your installation medium.&lt;/p&gt;
&lt;p&gt;Then, to be safe type &lt;code&gt;umount -R /mnt&lt;/code&gt; to unmount your Arch installation (on
your harddrive).&lt;/p&gt;
&lt;h3&gt;Reboot!&lt;/h3&gt;
&lt;p&gt;Type &lt;code&gt;reboot&lt;/code&gt;. Remove your installation medium. You should boot to your new
installation.&lt;/p&gt;
&lt;h2&gt;LARBS&lt;/h2&gt;
&lt;p&gt;Here is the easy part. To get a pretty cool configuration right away, use
Luke Smith's &lt;a href="https://larbs.xyz"&gt;LARBS&lt;/a&gt; setup.&lt;/p&gt;
&lt;p&gt;Booting your new Arch setup, login as &lt;code&gt;root&lt;/code&gt;. You'll be prompted for your
password.&lt;/p&gt;
&lt;p&gt;Next, run&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl -LO larbs.xyz/larbs.sh  &lt;span class="c1"&gt;# Download the script&lt;/span&gt;
bash larbs.sh                &lt;span class="c1"&gt;# Run the script you just downloaded!&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Logging in&lt;/h3&gt;
&lt;p&gt;Login with the username and password you set in LARBS. To modify your system,
you'll probably need to use &lt;code&gt;su&lt;/code&gt; and the password you set for root in the
Arch install.&lt;/p&gt;
&lt;h3&gt;Troubleshooting&lt;/h3&gt;
&lt;p&gt;If you aren't connected to the Internet, this step can be a pain in the ass.
Search the Arch Wiki for wisdom.&lt;/p&gt;</content></entry><entry><title>Getting Comfortable with Linux</title><link href="https://captainalan.github.io/pelican-test/getting-comfortable-with-linux.html" rel="alternate"></link><published>2019-06-02T00:00:00-07:00</published><updated>2019-06-02T00:00:00-07:00</updated><author><name>Alan Wong</name></author><id>tag:captainalan.github.io,2019-06-02:/pelican-test/getting-comfortable-with-linux.html</id><summary type="html">&lt;p&gt;This tutorial aims to answer this question:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Now that I have a Linux system running, how do I go about learning more?
(prefarably offline)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;That is, this tutorial is aimed at eager beginners and aspiring computer users
that have decided to no longer be casuals.&lt;/p&gt;
&lt;h2&gt;Requirements&lt;/h2&gt;
&lt;p&gt;In a previous tutorial …&lt;/p&gt;</summary><content type="html">&lt;p&gt;This tutorial aims to answer this question:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Now that I have a Linux system running, how do I go about learning more?
(prefarably offline)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;That is, this tutorial is aimed at eager beginners and aspiring computer users
that have decided to no longer be casuals.&lt;/p&gt;
&lt;h2&gt;Requirements&lt;/h2&gt;
&lt;p&gt;In a previous tutorial, I went over &lt;a href="https://captainalan.github.io/pelican-test/"&gt;installing Arch
Linux&lt;/a&gt; based on a video tutorial
by &lt;a href="https://lukesmith.xyz/"&gt;Luke Smith&lt;/a&gt; and information found on the &lt;a href="https://wiki.archlinux.org/"&gt;Arch
Wiki&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In this tutorial, I assume that you have a Linux system up and running (...and
here, the term "Linux" is used to mean a UNIX or UNIX-like system that has
certain core utilities, &lt;em&gt;not&lt;/em&gt; the kernel itself or something highly technical
like that).&lt;/p&gt;
&lt;p&gt;Learning the basics of &lt;em&gt;some&lt;/em&gt; editor is probably a good idea. Editors like &lt;code&gt;vi&lt;/code&gt;
and &lt;code&gt;nano&lt;/code&gt; can be found pretty much anywhere. It probably won't be too difficult
for you to grab a more sophisticated editor like &lt;code&gt;vim&lt;/code&gt;, &lt;code&gt;emacs&lt;/code&gt; or even &lt;code&gt;VSCode&lt;/code&gt;
if that is your cup of tea.&lt;/p&gt;
&lt;h2&gt;Exploring your filesystem&lt;/h2&gt;
&lt;p&gt;Are there things that you don't understand? How do you find documentation for
those things?&lt;/p&gt;</content></entry><entry><title>HEHEHEHEHE</title><link href="https://captainalan.github.io/pelican-test/hehehehehe.html" rel="alternate"></link><published>2019-05-15T10:50:00-07:00</published><updated>2019-05-15T10:50:00-07:00</updated><author><name>Alan Wong</name></author><id>tag:captainalan.github.io,2019-05-15:/pelican-test/hehehehehe.html</id><content type="html">&lt;p&gt;It is a pleasure to edit in Markdown!&lt;/p&gt;
&lt;p&gt;Check out this animated pelican:&lt;/p&gt;
&lt;p&gt;&lt;img alt="A Pelican" src="https://i.imgur.com/ydhVJLu.gif"&gt;&lt;/p&gt;</content></entry><entry><title>Why Static Sites?</title><link href="https://captainalan.github.io/pelican-test/why-static-sites.html" rel="alternate"></link><published>2019-05-15T10:13:00-07:00</published><updated>2019-05-15T10:13:00-07:00</updated><author><name>Alan Wong</name></author><id>tag:captainalan.github.io,2019-05-15:/pelican-test/why-static-sites.html</id><summary type="html">&lt;p&gt;Static sites deploy easily, without special considerations about what
will compile, what will be allowed, etc. Everything is packaged up
nicely and good to go. Its like grabbing an an acoustic guitar and
just beginning to play versus doing a complex setup with an electric
guitar. Sure, you can make …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Static sites deploy easily, without special considerations about what
will compile, what will be allowed, etc. Everything is packaged up
nicely and good to go. Its like grabbing an an acoustic guitar and
just beginning to play versus doing a complex setup with an electric
guitar. Sure, you can make more different sounds in the latter setup,
but there are also bigger hurdles to overcome if you just want to get
started practicing.&lt;/p&gt;
&lt;p&gt;Simplifying web development means having more time available to focus
on producing quality content, rather than wrestling with abstractions
and engineering-ish problems. You should write a math blog or a maker
blog if you wanna do either of those activities, respectively 😡&lt;/p&gt;</content></entry><entry><title>Pelican Supports Syntax Highlighting</title><link href="https://captainalan.github.io/pelican-test/pelican-supports-syntax-highlighting.html" rel="alternate"></link><published>2019-05-14T00:00:00-07:00</published><updated>2019-05-14T00:00:00-07:00</updated><author><name>Alan Wong</name></author><id>tag:captainalan.github.io,2019-05-14:/pelican-test/pelican-supports-syntax-highlighting.html</id><summary type="html">&lt;h2&gt;JavaScript&lt;/h2&gt;
&lt;p&gt;Does code highlighting work here?&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;// ES5&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;bar baz&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// ES6+&lt;/span&gt;
&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;blah&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Haskell&lt;/h2&gt;
&lt;p&gt;Function application with the &lt;code&gt;&amp;lt;*&amp;gt;&lt;/code&gt; operator and a &lt;code&gt;Maybe&lt;/code&gt; context:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kt"&gt;Just&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class="kt"&gt;Just&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;
&lt;span class="kt"&gt;Just&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Why might you want to do that …&lt;/p&gt;</summary><content type="html">&lt;h2&gt;JavaScript&lt;/h2&gt;
&lt;p&gt;Does code highlighting work here?&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;// ES5&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;bar baz&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// ES6+&lt;/span&gt;
&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;blah&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Haskell&lt;/h2&gt;
&lt;p&gt;Function application with the &lt;code&gt;&amp;lt;*&amp;gt;&lt;/code&gt; operator and a &lt;code&gt;Maybe&lt;/code&gt; context:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kt"&gt;Just&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class="kt"&gt;Just&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;
&lt;span class="kt"&gt;Just&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Why might you want to do that?&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kt"&gt;Just&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class="kt"&gt;Just&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;asdf&amp;quot;&lt;/span&gt;
&lt;span class="c1"&gt;-- ERROR....!!!&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Things blow up if incompatible types are used. Whoa!&lt;/p&gt;
&lt;p&gt;Here's some more functional fun.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;$&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The code above maps the multiplication operator to the first list [1,2] to produce 
the functions something like this &lt;code&gt;[(\x -&amp;gt; x * 1), (\x -&amp;gt; x * 2)]&lt;/code&gt;. These functions
are in turn each applied to to &lt;code&gt;[3]&lt;/code&gt; giving &lt;code&gt;[3,6]&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;Python&lt;/h2&gt;
&lt;p&gt;Input&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;
&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;arange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="n"&gt;reshape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;a&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Output:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;([[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
       &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
       &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;]])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Multiplying &lt;code&gt;a&lt;/code&gt; by a scalar quantity&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Gives:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;([[&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
       &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
       &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;]])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content></entry></feed>