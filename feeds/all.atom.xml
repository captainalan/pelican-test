<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Alan's Miscellaneous Stuff Blog</title><link href="https://captainalan.github.io/pelican-test/" rel="alternate"></link><link href="https://captainalan.github.io/pelican-test/feeds/all.atom.xml" rel="self"></link><id>https://captainalan.github.io/pelican-test/</id><updated>2020-02-28T00:00:00-08:00</updated><entry><title>Shadowrun Games Review</title><link href="https://captainalan.github.io/pelican-test/shadowrun-games-review.html" rel="alternate"></link><published>2020-02-28T00:00:00-08:00</published><updated>2020-02-28T00:00:00-08:00</updated><author><name>Alan Wong</name></author><id>tag:captainalan.github.io,2020-02-28:/pelican-test/shadowrun-games-review.html</id><summary type="html">&lt;p&gt;Here is my game review for &lt;a href="https://store.steampowered.com/app/346940/Shadowrun_Hong_Kong__Extended_Edition/"&gt;Shadowrun: Hong
Kong&lt;/a&gt;
(2015) and &lt;a href="https://store.steampowered.com/app/234650/Shadowrun_Returns/"&gt;Shadowrun
Returns&lt;/a&gt;
(2013).&lt;/p&gt;
&lt;p&gt;This review &lt;em&gt;contains no spoilers&lt;/em&gt;. I'm mainly discussing major
gameplay things you'll be able see within ten minutes of playing.&lt;/p&gt;
&lt;h2&gt;Background&lt;/h2&gt;
&lt;p&gt;Would you trust someone who doesn't drink coffee to give you reviews
of the local …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Here is my game review for &lt;a href="https://store.steampowered.com/app/346940/Shadowrun_Hong_Kong__Extended_Edition/"&gt;Shadowrun: Hong
Kong&lt;/a&gt;
(2015) and &lt;a href="https://store.steampowered.com/app/234650/Shadowrun_Returns/"&gt;Shadowrun
Returns&lt;/a&gt;
(2013).&lt;/p&gt;
&lt;p&gt;This review &lt;em&gt;contains no spoilers&lt;/em&gt;. I'm mainly discussing major
gameplay things you'll be able see within ten minutes of playing.&lt;/p&gt;
&lt;h2&gt;Background&lt;/h2&gt;
&lt;p&gt;Would you trust someone who doesn't drink coffee to give you reviews
of the local cafés? Probably not. Let me tell you a bit about myself
and my gaming history.&lt;/p&gt;
&lt;h3&gt;I am a Casual&lt;/h3&gt;
&lt;p&gt;I don't play games competitively whatsoever. I briefly tried to climb
in LoL, but I sucked and remained in Bronze where I originally placed,
lol. I am a &lt;em&gt;casual&lt;/em&gt;. So here I am, reviewing a game series I played
through on &lt;em&gt;normal&lt;/em&gt; mode. Me, a &lt;strong&gt;normie&lt;/strong&gt;.&lt;/p&gt;
&lt;h3&gt;I take a long time to play through games&lt;/h3&gt;
&lt;p&gt;Typically, when I go through some game, I play like 3-7 times per a
week in around 1-2 hour sessions. That being said, it takes a while
for me to finish playing through any game.&lt;/p&gt;
&lt;h2&gt;Races, Classes, Etiquettes&lt;/h2&gt;
&lt;p&gt;One interesting aspect of the Shadowrun games is the way characters
are built. Building interesting characters is one the main reasons
people would play an
&lt;a href="https://en.wikipedia.org/wiki/Role-playing_game"&gt;RPG&lt;/a&gt; to begin with.&lt;/p&gt;
&lt;h3&gt;Races&lt;/h3&gt;
&lt;p&gt;There are "&lt;a href="https://en.wikipedia.org/wiki/Vanilla_software"&gt;vanilla&lt;/a&gt;"
humans and then there are "metahumans": trolls, orcs, dwarves, elves.
Using different (fictional) races like this allows the game creators
to introduce low-key "&lt;strong&gt;race realism&lt;/strong&gt;" into this game. Some races are
more/less charismatic than others, other races are physically
stronger/weaker. These discussions needn't be &lt;em&gt;hateful&lt;/em&gt; of course;
rather the player must ask themselves, how do I navigate this
diversity that I never asked for?&lt;/p&gt;
&lt;p&gt;So, as with other fictional universes, you can safely explore the
notion of "race" in Shadowrun.&lt;/p&gt;
&lt;h3&gt;Classes&lt;/h3&gt;
&lt;p&gt;As an undergraduate, I typically received the same sort of reaction
when I said I was majoring in Philosophy (and Chinese, but &lt;em&gt;not&lt;/em&gt;
"Chinese Philosophy" mind you). Namely, people asked "wtf are you
gonna do with that?" A valid question, ha!&lt;/p&gt;
&lt;p&gt;Shadowrun is similar&amp;mdash;except you choose a general &lt;em&gt;class&lt;/em&gt; for
your character, and typically build up attributes/abilities (by
spending &lt;em&gt;karma&lt;/em&gt; points) that match your character's affinities. As in
real life, your resources are limited, so if you try to spread your
development too thin (like yours truly), you may quickly end up the
"jack of all trades, but the master of none". However, as you hyper
focus, there are also &lt;strong&gt;diminishing marginal returns&lt;/strong&gt;, with each
increasing of an existing ability/attribute you have being more
expensive.&lt;/p&gt;
&lt;p&gt;Thus to build a strong character (in terms of game mechanics), you
have to strike a balance between spcializing (and unlocking very
powerful abilities) and building yourself a broad palette of options.&lt;/p&gt;
&lt;h3&gt;Etiquettes&lt;/h3&gt;
&lt;p&gt;In Shadowrun, you choose an "etiquette", like Corporate, Security,
Gang... Basically this is social know-how for some type of community.&lt;/p&gt;
&lt;p&gt;I found this pretty relevant to real life; you may, for example, be a
straight-A student, but a total idiot on the streets. Likewise, you
may be excellent at writing cover letters for LinkedIn, but you may
suck at creating cheery conversation buzz with friends.&lt;/p&gt;
&lt;h3&gt;Other things&lt;/h3&gt;
&lt;p&gt;When building a character, you can optionally get cyber-body upgrades
like plastic coating for your skin and such. Each upgrade consumes
"essence" of your body; you cannot completely replace yourself with
robo-parts! For you nerds that like "deep thoughts", check out some
thought experiments in "&lt;strong&gt;Philosophy of Mind&lt;/strong&gt;". You can sip wine with
your pinky up while doing so.&lt;/p&gt;
&lt;h2&gt;The cyberpunk aesthetic&lt;/h2&gt;
&lt;p&gt;The main reason I can see for playing Shadowrun is to enjoy immersive
role playing. For tactical strategy greatness, fast-paced action,
studying Japanese, or whatever you might wanna do, there are probably
better options. But for running around sprawling urban concrete
jungles causing mischief, these games are pretty fun. Would recommend
and play again!&lt;/p&gt;</content><category term="Fun"></category></entry><entry><title>"Propaganda" as a Descriptive Term</title><link href="https://captainalan.github.io/pelican-test/propaganda-as-a-descriptive-term.html" rel="alternate"></link><published>2020-02-26T00:00:00-08:00</published><updated>2020-02-26T00:00:00-08:00</updated><author><name>Alan Wong</name></author><id>tag:captainalan.github.io,2020-02-26:/pelican-test/propaganda-as-a-descriptive-term.html</id><summary type="html">&lt;p&gt;The term &lt;strong&gt;propaganda&lt;/strong&gt; is often used as a kind of slur. Here, I want
to discuss "propaganda" used as a &lt;strong&gt;descriptive&lt;/strong&gt; term. All sorts of
people use propaganda, including people you likely.&lt;/p&gt;
&lt;p&gt;Here's a definition.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Propaganda is information that is used primarily to influence an
audience and further an agenda …&lt;/p&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;p&gt;The term &lt;strong&gt;propaganda&lt;/strong&gt; is often used as a kind of slur. Here, I want
to discuss "propaganda" used as a &lt;strong&gt;descriptive&lt;/strong&gt; term. All sorts of
people use propaganda, including people you likely.&lt;/p&gt;
&lt;p&gt;Here's a definition.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Propaganda is information that is used primarily to influence an
audience and further an agenda, which may not be objective and may
be presenting facts selectively to encourage a particular synthesis
or perception, or using loaded language to produce an emotional
rather than a rational response to the information that is
presented.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;(Definition from &lt;a href="https://en.wikipedia.org/wiki/Propaganda"&gt;Wikipedia&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;The wikipedia definition above is kind of
&lt;a href="https://www.urbandictionary.com/define.php?term=neckbeard"&gt;&lt;strong&gt;neckbeard-y&lt;/strong&gt;&lt;/a&gt;
in my opinion, but it is good enough to work from.&lt;/p&gt;
&lt;h2&gt;All those brainwashed sheeple!&lt;/h2&gt;
&lt;p&gt;How do you imagine someone in a cult talks? Look at how you and your
in-group(s) signal agreement. Look at what you begin with as
assumptions.&lt;/p&gt;
&lt;p&gt;There is not time to bicker about philosophical this-or-that everyday,
so everyone has to take some assumptions about how the world works and
run with that. In some environments, it may more-or-less match up with
the real world. Consider "scientific" thinking; most people most of
the time just take what they are on authority, just like religious
people. Those "marching for science" are not much different from
people at a religious rally. They both assume they are right, and they
are publically displaying their devotion to their ideological cause.&lt;/p&gt;
&lt;p&gt;Assuming you do stuff in the real world, you most certainly operate in
social circumstances that more or less force you to acknowledge
certain things as true. Propaganda reinforces these axioms that create
social-cohesion.&lt;/p&gt;
&lt;h2&gt;How we use propaganda&lt;/h2&gt;
&lt;p&gt;Propaganda is everywhere and it can be very useful, not just for
controlling others but for controlling ourselves.&lt;/p&gt;
&lt;h3&gt;Motivation&lt;/h3&gt;
&lt;p&gt;Propaganda is super useful for doing things like reaching goals. Goals
are often defined in terms propaganda taught us. Consider listening to
a "work out" playlist. The music you are listening to is &lt;em&gt;literally
mind control waves&lt;/em&gt;, putting you in a kind of rhythmic trance and
making you wanna go show off your enw fit body at the club or
whatever. This can be incredibly motivating for many people.&lt;/p&gt;
&lt;h3&gt;Social Reinforcement&lt;/h3&gt;
&lt;p&gt;As mentioned above, propaganda is useful for signalling in-group
preference. Posting such and such image can signal that you are "one
of the boys" in some group. A mistake can show affiliations you were
trying to hide. The more socialized you are in some group, the better
you are able to recognize insiders and outsiders.&lt;/p&gt;
&lt;h3&gt;The Dark Arts&lt;/h3&gt;
&lt;p&gt;The first step to understanding the &lt;strong&gt;Dark Arts&lt;/strong&gt; is to realize the
darkness within yourself. Learn how propaganda operates in your life
already and then you can start to help others defend against it. You
may also choose to channel the dark energy for your benefit, as you
come to understand it better.&lt;/p&gt;</content><category term="Lifestyle"></category></entry><entry><title>Use Browser Navigation</title><link href="https://captainalan.github.io/pelican-test/use-browser-navigation.html" rel="alternate"></link><published>2020-02-26T00:00:00-08:00</published><updated>2020-02-26T00:00:00-08:00</updated><author><name>Alan Wong</name></author><id>tag:captainalan.github.io,2020-02-26:/pelican-test/use-browser-navigation.html</id><summary type="html">&lt;p&gt;Built into all browsers these days are buttons like FORWARD, BACK, and
REFRESH. However, many web developers choose to build navigation
components into their sites which ignore this built in functionality.
The result is UI &lt;strong&gt;bloat&lt;/strong&gt;. There are multiple back buttons displayed
for most users, both those on screen and …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Built into all browsers these days are buttons like FORWARD, BACK, and
REFRESH. However, many web developers choose to build navigation
components into their sites which ignore this built in functionality.
The result is UI &lt;strong&gt;bloat&lt;/strong&gt;. There are multiple back buttons displayed
for most users, both those on screen and those on the browser
itself. Rather than having content quickly and cleanly delivered, we
are faced with all-looking-the-same websites, which are supposedly
user-friendly.&lt;/p&gt;
&lt;p&gt;Individual users can do things to get rid of browser clutter. However,
most people aren't nerds who tweak their browser settings to hide
things they don't want (or who set up stuff like &lt;code&gt;vim&lt;/code&gt; keybindings for
their browser).&lt;/p&gt;
&lt;h2&gt;Content First&lt;/h2&gt;
&lt;p&gt;Making use of browser buttons instead of cluttering a UI with your own
buttons puts your &lt;em&gt;content first&lt;/em&gt;. Navigating your web pages should be
non-annoying, but is not the main reason people (should) visit your
website. Hopefully you have something useful to offer that pretty
menus and spinners.&lt;/p&gt;
&lt;h3&gt;Peripheral friendliness&lt;/h3&gt;
&lt;p&gt;One other advantage of making use of normal BACK/FORWARD functionality
is that many keyboards and mice (as well as other things, like game
controllers) can be set up to access these functions on convenient
thumb-buttons and other more ergonomic fixtures. Save your ass
expensive medical bills from &lt;b&gt;RSI&lt;/b&gt; and stuff and build for the
future.&lt;/p&gt;
&lt;h3&gt;Action plan&lt;/h3&gt;
&lt;p&gt;I'm going to write many web pages that you have to use your browser
navigation to get away from. No need to write another "back" button if
you can just press back. No layers of abstraction above normal browser
navigation.&lt;/p&gt;
&lt;h2&gt;Other technical notes&lt;/h2&gt;
&lt;p&gt;Modern web tech like &lt;strong&gt;React&lt;/strong&gt; piles on some layers of abstraction
through things like &lt;strong&gt;dynamic routing&lt;/strong&gt; with tools like &lt;strong&gt;React
router&lt;/strong&gt; to implement forward-back functionality in &lt;strong&gt;Single Page
Applications&lt;/strong&gt; (SPA). This is understandable for making snappy web
pages that feel "modern".&lt;/p&gt;
&lt;p&gt;However, if you don't load too many images and other media, keep
things clean and simple, etc., web pages don't even take that long to
load. This blog, for instance.&lt;/p&gt;</content><category term="Interwebs"></category></entry><entry><title>No Glasses Meditation</title><link href="https://captainalan.github.io/pelican-test/no-glasses-meditation.html" rel="alternate"></link><published>2020-02-18T00:00:00-08:00</published><updated>2020-02-18T00:00:00-08:00</updated><author><name>Alan Wong</name></author><id>tag:captainalan.github.io,2020-02-18:/pelican-test/no-glasses-meditation.html</id><summary type="html">&lt;p&gt;I'm going to try something for some time. Every day, I will spend a
chunk of time (maybe 2 hours) without my glasses.  The idea is to
train concentration, memory, recall and using other senses.&lt;/p&gt;
&lt;p&gt;As a side effect, I hope to also train myself to spend more time doing …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I'm going to try something for some time. Every day, I will spend a
chunk of time (maybe 2 hours) without my glasses.  The idea is to
train concentration, memory, recall and using other senses.&lt;/p&gt;
&lt;p&gt;As a side effect, I hope to also train myself to spend more time doing
mind-work while on my feet, doing chores, etc.&lt;/p&gt;
&lt;h3&gt;Reading too much is a problem&lt;/h3&gt;
&lt;p&gt;It is easy to become passive simply &lt;strong&gt;consooming&lt;/strong&gt; information; in the
age of the Internet, there is endless verbiage to consume. Without
deliberate filtering, you are at the mercy of editorial boards (or
lack thereof). Each person must become their own bureau of
censorship/education.&lt;/p&gt;
&lt;p&gt;By not wearing glasses, for some time each day, I hope to become more
deliberate in whatever I do.&lt;/p&gt;</content><category term="Lifestyle"></category></entry><entry><title>Tactile Niceness: From Computer Keyboards to Musical Instruments</title><link href="https://captainalan.github.io/pelican-test/tactile-niceness-from-computer-keyboards-to-musical-instruments.html" rel="alternate"></link><published>2020-02-17T00:00:00-08:00</published><updated>2020-02-17T00:00:00-08:00</updated><author><name>Alan Wong</name></author><id>tag:captainalan.github.io,2020-02-17:/pelican-test/tactile-niceness-from-computer-keyboards-to-musical-instruments.html</id><summary type="html">&lt;h2&gt;Why Dvorak, When Dvořák&lt;/h2&gt;
&lt;p&gt;Musical instruments, stringed ones in particular have many features of
a good ergonomic keyboard layout. Since spending some more time
studying music more seriously, I've lost interest in optimizing
typing. I used to type Dvorak (got over 100 WPM), but have since
switched &lt;em&gt;back&lt;/em&gt; to standard …&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Why Dvorak, When Dvořák&lt;/h2&gt;
&lt;p&gt;Musical instruments, stringed ones in particular have many features of
a good ergonomic keyboard layout. Since spending some more time
studying music more seriously, I've lost interest in optimizing
typing. I used to type Dvorak (got over 100 WPM), but have since
switched &lt;em&gt;back&lt;/em&gt; to standard QWERTY, the default of the US.&lt;/p&gt;
&lt;p&gt;When the (physical) input of what you are doing is reflected in the
(physical) output, it feels good. Computer keyboards will always be
characterized by arbitrariness because there is a lot of chaos in
writtelanguage. Even if by chance a keyboard was designed where the
arrangement of letters somehow matched some phonetic properties or
something like that, this wouldn't necessarily translate to a nice
typing experience.&lt;/p&gt;
&lt;p&gt;Playing stringed instruments is tactically satisfying because the
inputs you apply (bowing, picking, etc.) translate immediately into
the sounds produced. Even looking at different ways of tuning a guitar
(e.g. standard EADGBE versus DADGAD), the "logic" of fretting to get
higher pitched sounds remains. The layout of the instrument (and
therefore the "inputs" it takes) will always be reflected in the
sounds produced. Keyboard instruments typically do this, but I guess
you could program a synthesizer to behave more arbitrarily if you
really wanted to... but why? Just type to experience that chaos!&lt;/p&gt;</content><category term="Fun"></category></entry><entry><title>Yang Gang 2020 Aftermath</title><link href="https://captainalan.github.io/pelican-test/yang-gang-2020-aftermath.html" rel="alternate"></link><published>2020-02-12T00:00:00-08:00</published><updated>2020-02-12T00:00:00-08:00</updated><author><name>Alan Wong</name></author><id>tag:captainalan.github.io,2020-02-12:/pelican-test/yang-gang-2020-aftermath.html</id><summary type="html">&lt;p&gt;Andrew Yang stopped his campaign some time around today. I was not
necessarily opposed to Yang, but was by no means an ardent supporter
either. Here's I share some thoughts about Yang's political
messages/campaign.&lt;/p&gt;
&lt;p&gt;First are some impressions/observations:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Yang campaigned hard on &lt;strong&gt;Universal Basic Income&lt;/strong&gt;, $1000 bucks a …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;Andrew Yang stopped his campaign some time around today. I was not
necessarily opposed to Yang, but was by no means an ardent supporter
either. Here's I share some thoughts about Yang's political
messages/campaign.&lt;/p&gt;
&lt;p&gt;First are some impressions/observations:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Yang campaigned hard on &lt;strong&gt;Universal Basic Income&lt;/strong&gt;, $1000 bucks a
  month for pretty much all adults in a certain age range&lt;ul&gt;
&lt;li&gt;I accept Yang's point that this is probably a better
  redistribution scheme than other existing programs, layers and
  layers of bureaucracy, etc.&lt;/li&gt;
&lt;li&gt;I would not like to see the government expand; it is unclear to
  me if Yang's Freedom Divident (aka &lt;strong&gt;NEET bux&lt;/strong&gt;) would be
  accompanied by cutting government spending elsewhere&lt;/li&gt;
&lt;li&gt;If UBI were to come to be, I'd expect a proliferation of
  subsisting people living ant-style (&lt;em&gt;ari-zoku&lt;/em&gt;) for free; talk
  about danger for epidemics! A specialized class of rent-farmers
  would likely thrive too... (speculation)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Yang's race/ethnicity is a whatever to me&lt;ul&gt;
&lt;li&gt;But I see you racialists out there choosing Yang just because
  he's "of color" or "Asian" just like people chose Obama for
  similar reasons&lt;/li&gt;
&lt;li&gt;I think that there are both people more inclined to vote for
  Yang &lt;em&gt;because&lt;/em&gt; he's Asian, and also people who would choose not
  to because of that... ...or maybe it's more about him appealing
  to the "nerd" demographic&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Talk of the threat of Artificial Intelligence and climate change
  without talk about populations/demographics gets the noggin' joggin'&lt;ul&gt;
&lt;li&gt;Should governments decide which groups to subsidize (and
  hence increase) at the expense of others?&lt;/li&gt;
&lt;li&gt;(Insert Leftist critiques of big oil, tobacco industries, and
  related topics)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Yang appears to me to be a pretty good guy, and a sincere person. In
this way, I think he has a trustworthy "feel" like Sanders. However, I
do believe his policies in general would drive America to be worse and
worse; sorry Ayn Rand brainwashed me.&lt;/p&gt;
&lt;h2&gt;Dichotomous Political Opinions&lt;/h2&gt;
&lt;p&gt;From the &lt;strong&gt;right&lt;/strong&gt;, I like how Yang&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;criticizes the inefficiency of government&lt;/li&gt;
&lt;li&gt;has a scheme to allow capitalism, but with some safety net&lt;ul&gt;
&lt;li&gt;see how people relate UBI to "classical liberal" thought&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;rouses &lt;strong&gt;swamp-drainy&lt;/strong&gt; thoughts and criticisms of the &lt;strong&gt;legacy
   media&lt;/strong&gt; on the Dem side (search term &lt;strong&gt;yang media blackout&lt;/strong&gt;)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;From the &lt;strong&gt;left&lt;/strong&gt;, I like how Yang&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Has a redistributionist scheme that &lt;em&gt;is more universal than
   anything we've seen before&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Seems relatively peaceful, not war-hawky&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Open the Third Eye; Optics and Meta-Cognitive Stuff&lt;/h2&gt;
&lt;p&gt;I dislike the 'MATH' campaign thing and all that nerd stuff; I see
that Yang is a lawyer too, not an engineer or even a veteran
(C.f. Tulsi Gabbard) so I suspect how "in touch" with reality he is on
the physics of the world. Math is wallowing in abstractions; how does
this map to reality?&lt;/p&gt;
&lt;p&gt;This doesn't matter to most people who just clamour against "CLIMATE
CHANGE" and view they have "SCIENCE" on their side without
understanding a thing about it, besides what they've heard, akin to
how most people accept the traditions/religions handed to them.
(&lt;strong&gt;Note&lt;/strong&gt;: I'm not denying climate change or criticizing
traditions/religions here, I'm just making a point about how people
accept/reject ideas presented to them...)&lt;/p&gt;
&lt;h2&gt;The memes were with him...&lt;/h2&gt;
&lt;p&gt;(...but many were probably by top-down design)&lt;/p&gt;
&lt;p&gt;In any case, I hope that this whole Yang ordeal encoruages people to
criticially evaluate the sources they get any information from.&lt;/p&gt;
&lt;p&gt;In this blog post, I cite nothing and just say my impressions. No fake
news here. Just opinions. Is your news just opinions too?&lt;/p&gt;</content><category term="News"></category></entry><entry><title>Facebook is Fine</title><link href="https://captainalan.github.io/pelican-test/facebook-is-fine.html" rel="alternate"></link><published>2020-02-10T00:00:00-08:00</published><updated>2020-02-10T00:00:00-08:00</updated><author><name>Alan Wong</name></author><id>tag:captainalan.github.io,2020-02-10:/pelican-test/facebook-is-fine.html</id><summary type="html">&lt;p&gt;A quick Internet search (c.f. &lt;em&gt;Google&lt;/em&gt; search) will reveal troves of
anti-Facebook articles. Should you get off Facebook?&lt;/p&gt;
&lt;p&gt;I have not quit Facebook. Here's some reasons why:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Using an online platform transparently linked to your real-world
   offers many advantages over anonymous platforms for &lt;strong&gt;connecting
   with real-life friends and family …&lt;/strong&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;A quick Internet search (c.f. &lt;em&gt;Google&lt;/em&gt; search) will reveal troves of
anti-Facebook articles. Should you get off Facebook?&lt;/p&gt;
&lt;p&gt;I have not quit Facebook. Here's some reasons why:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Using an online platform transparently linked to your real-world
   offers many advantages over anonymous platforms for &lt;strong&gt;connecting
   with real-life friends and family, commerce, and finding new
   communities&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Facebook will harvest data on you (you "node" in its graph) whether
   you like it or not; might as well &lt;strong&gt;take as much control&lt;/strong&gt; of your
   user profile as you can&lt;/li&gt;
&lt;li&gt;You can &lt;strong&gt;train Facebook&lt;/strong&gt; to be more useful to you: e.g. use
   Facebook to study a foreign language&lt;/li&gt;
&lt;li&gt;Understanding Facebook is a &lt;strong&gt;marketable skill&lt;/strong&gt;: particularly,
   managing ad campaigns, administering pages, etc.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;For those that can manage not being totally addicted to Facebook, I
think it is a decently good idea to reclaim Facebook as &lt;em&gt;your public
facing platform&lt;/em&gt;. Facebook is now a rather established platform that
offers many useful services. Approaching Facebook purposefully, you
can leverage it to be an overall good thing in your life.&lt;/p&gt;
&lt;h2&gt;Don't be a coward, show your face!&lt;/h2&gt;
&lt;p&gt;There are many places on the Internet where users communicate with
(relative) anonymity, hiding behind an anime profile picture, an image
of a cute dog/cat, some meme character, etc.  Certainly, there are
cases where anonymity is useful, notably for &lt;strong&gt;whistleblowers&lt;/strong&gt; or
other individuals who &lt;em&gt;must&lt;/em&gt; be anonymous for their own safety.  I
support the creation and maintenance of places for people to
communicate anonymously (and oppose "deplatforming" in the USA where I
live, generally), but I don't think they are good for most people most
of the time.&lt;/p&gt;
&lt;p&gt;Here are some general points about how anonymity can lead to bad
behavior:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Little to no "&lt;strong&gt;skin in the game&lt;/strong&gt;" causes people to speak
  recklessly or to take actions that can hurt others&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Escapism&lt;/strong&gt; is encouraged; &lt;strong&gt;accountability&lt;/strong&gt; is avoided&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Trends&lt;/strong&gt; are more difficult to assess; prolific shit-posters may
  inflate the relevance of certain themes, bringing the fringe to the
  mainstream; different information ecosystems&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;On the other hand, having a real-world identity linked up with online
interactions encourages people to treat each other more politely and
avoid being overtly nasty as the Internet functions as something of a
public record.&lt;/p&gt;
&lt;p&gt;Using a real-world identity online encoruages people to use online
platforms as &lt;em&gt;a gateway to offline interactions&lt;/em&gt;. Logistics can be
handled much more easily if everyone involved is familiar with social
media.&lt;/p&gt;
&lt;p&gt;The question of ads and influence (what I like to call "the dark
arts") is a big topic, especially following all the 2016 presidential
election stuff. That being said, a platform like Facebook allows
astute users to observe who is pushing what agenda more
transparently. Ads have to be pushed by someone for something, after
all. &lt;/p&gt;
&lt;h2&gt;Control your node&lt;/h2&gt;
&lt;p&gt;I have spoken to friends who at some point or another decided to
"close" their Facebook accounts. To the best of my knowledge, Facebook
makes no promises at ever completely deleting your stuff, so closing
your account is essentially forfeiting control of your node (data representing you on Facebook's &lt;a href="https://developers.facebook.com/docs/graph-api/overview"&gt;Graph API&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Choosing to keep a Facebook account (even if you don't use it much) is
akin to holding onto property you'd rather have &lt;em&gt;not abused&lt;/em&gt; event if
you aren't actively using it. Particularly for public-facing
individuals, keeping control of Facebook content about you might be a
good idea,&lt;/p&gt;
&lt;h2&gt;Train Facebook to do what you want&lt;/h2&gt;
&lt;p&gt;Facebook's &lt;strong&gt;Feed&lt;/strong&gt; has been the subject of lots of controversy.  Many
things about it are opaque to end users. However, in general, a "what
you put into the surveillance state browser is what you get out of it"
principle seems to hold true for most people I have discussed these
issues with.&lt;/p&gt;
&lt;p&gt;If you log into Google chrome and search for digital camera things on
Amazon, what sort of ads do you expect to see in Facebook?&lt;/p&gt;
&lt;p&gt;You can train Facebook to give you more of what you think you &lt;em&gt;should
be seeing&lt;/em&gt;. For example, if you are trying to do more home cooking,
just go search some cooking stuff. Facebook will probably feed you
lots of interesting inspiration.&lt;/p&gt;
&lt;h2&gt;Purposefully use Facebook&lt;/h2&gt;
&lt;p&gt;Nowadays, I only pick up phone calls if I am expecting a call or if
the number calling is one I recognize. This has saved lots of time.&lt;/p&gt;
&lt;p&gt;Approaching Facebook with a &lt;strong&gt;policy&lt;/strong&gt; like how many people approach
phone calls can allow you to leverage this powerful platform to
enhance your life. &lt;/p&gt;</content><category term="Interwebs"></category></entry><entry><title>Why LARBS?</title><link href="https://captainalan.github.io/pelican-test/why-larbs.html" rel="alternate"></link><published>2019-12-27T00:00:00-08:00</published><updated>2019-12-27T00:00:00-08:00</updated><author><name>Alan Wong</name></author><id>tag:captainalan.github.io,2019-12-27:/pelican-test/why-larbs.html</id><summary type="html">&lt;p&gt;In my &lt;a href="https://captainalan.github.io/pelican-test/arch-linux-install-for-n00bs.html"&gt;Arch Linux Install for n00bs&lt;/a&gt; I gave details on how to install Arch linux and then suggested &lt;a href="https://larbs.xyz"&gt;LARBS&lt;/a&gt; as a way to get up and running with your new installation. In this article I detail &lt;em&gt;why&lt;/em&gt; I find LARBS particularly useful and address some points brought up by …&lt;/p&gt;</summary><content type="html">&lt;p&gt;In my &lt;a href="https://captainalan.github.io/pelican-test/arch-linux-install-for-n00bs.html"&gt;Arch Linux Install for n00bs&lt;/a&gt; I gave details on how to install Arch linux and then suggested &lt;a href="https://larbs.xyz"&gt;LARBS&lt;/a&gt; as a way to get up and running with your new installation. In this article I detail &lt;em&gt;why&lt;/em&gt; I find LARBS particularly useful and address some points brought up by haters.&lt;/p&gt;
&lt;h1&gt;Sensible Defaults&lt;/h1&gt;
&lt;p&gt;The number one reason to use LARBS is to experience with &lt;strong&gt;sensible defaults
for a keyboard centered workflow&lt;/strong&gt;. LARBS offers an out-of-the-box setup of
many nice things that can take a long time to set up manually: a &lt;strong&gt;tiling
window manager&lt;/strong&gt;, vi-like &lt;strong&gt;line editing&lt;/strong&gt; (via zsh), a PDF reader (Zathura).&lt;/p&gt;
&lt;p&gt;Furthermore, LARBS comes bundled with software you probably want: e.g. a
privacy-respecting browser (Brave), git, some programming languages and
compilers. The &lt;code&gt;yay&lt;/code&gt; tool is already setup to help you grab even more software
from Arch Linux's AUR repositories.&lt;/p&gt;
&lt;h3&gt;But &lt;em&gt;real&lt;/em&gt; Linux users set these things up themselves&lt;/h3&gt;
&lt;p&gt;Practical people want good tools readily available to them. If you begin
learning guitar on a really poorly made instrument you are more likely to
become discouraged and give up. On the other hand, if you have a more
experienced friend (or shop) set up your instrument when you are getting
started, you may make a lot more progress, more quickly in &lt;em&gt;actually learning
how to play&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Furthermore, many aspects of installing things randomly often are annoying and
don't involve much learning. The arcane details of how to run some program you
are probably going to run only very rarely are perhaps better offloaded to
automation (e.g. the shell scripts LARBS uses).&lt;/p&gt;
&lt;h3&gt;But using someone else's setup is lame!&lt;/h3&gt;
&lt;p&gt;LARBS does not constrain how you set things up later---it's just a shell script
to get you started.&lt;/p&gt;
&lt;p&gt;For instance, I use emacs a lot, and Luke Smith (who made LARBS) doesn't. Many
tools in LARBS I don't care about or use (e.g. &lt;code&gt;vifm&lt;/code&gt;, vim-like file manager)
because I just use &lt;code&gt;dired&lt;/code&gt; in emacs.&lt;/p&gt;
&lt;h1&gt;Pros and Cons&lt;/h1&gt;
&lt;h2&gt;What LARBS is &lt;em&gt;not&lt;/em&gt; good for&lt;/h2&gt;
&lt;p&gt;Obviously, if you require applications that require Windows or some other OS, you are out of luck.&lt;/p&gt;
&lt;p&gt;If you are doing complicated things with sound, hardware, etc. LARBS only gives a basic desktop setup. It may be much harder to adjust these settings in LARBS compared with a well-established Linux distribution, such as Lubuntu or Manjaro (two others I have tried with older hardware).&lt;/p&gt;
&lt;p&gt;It is hard to set up typing in CJK; I'm still figuring out how to get this well
integrated and will upload a guide when I am able to do so nicely.&lt;/p&gt;
&lt;h2&gt;What LARBS &lt;em&gt;is&lt;/em&gt; good for&lt;/h2&gt;
&lt;p&gt;LARBS is good for getting a decent general computing and programming
environment set up quickly.&lt;/p&gt;
&lt;p&gt;For a user coming from a more traditional desktop setup, LARBS allows you to
explore ideas like...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Tiling windows for more efficient screen space usage&lt;/li&gt;
&lt;li&gt;Remapping CAPS LOCK for happier keyboarding&lt;/li&gt;
&lt;li&gt;Editing config files to change settings&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;...without the trouble that might come from tweaking another installation (e.g.
modifying default Ubuntu) or doing everything from scratch.&lt;/p&gt;
&lt;p&gt;While on the one hand, there is definitely learning to be done in &lt;em&gt;doing&lt;/em&gt;
things yourself from the start, why shouldn't we reuse good defaults and stable
software set up by more knowledgable people? Studying the LARBS config files is
a good way to start writing your own configs.&lt;/p&gt;
&lt;h1&gt;Summary&lt;/h1&gt;
&lt;p&gt;If you wanna try out a tilling window manager, just install Arch and LARBS. It
is not even that bad and you can customize it more later as you find out more
about what you want.&lt;/p&gt;</content><category term="Linux"></category></entry><entry><title>Getting Comfortable with Linux</title><link href="https://captainalan.github.io/pelican-test/getting-comfortable-with-linux.html" rel="alternate"></link><published>2019-08-14T00:00:00-07:00</published><updated>2019-08-14T00:00:00-07:00</updated><author><name>Alan Wong</name></author><id>tag:captainalan.github.io,2019-08-14:/pelican-test/getting-comfortable-with-linux.html</id><summary type="html">&lt;p&gt;Updated 8/14/2019&lt;/p&gt;
&lt;h2&gt;This tutorial&lt;/h2&gt;
&lt;p&gt;This tutorial aims to answer this question:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Now that I have a Linux system running, how do I go about learning
more?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This tutorial is aimed at eager beginners and aspiring computer users
that have decided to take control of their computing. It largely …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Updated 8/14/2019&lt;/p&gt;
&lt;h2&gt;This tutorial&lt;/h2&gt;
&lt;p&gt;This tutorial aims to answer this question:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Now that I have a Linux system running, how do I go about learning
more?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This tutorial is aimed at eager beginners and aspiring computer users
that have decided to take control of their computing. It largely
follows my journey to learn more about Linux specifically and
computing more generally. My goal is that with this tutorial and a
handful of things downloaded, you can sit with your
computer&amp;mdash;even without an Internet connection and learn more
about computing.&lt;/p&gt;
&lt;p&gt;My approach here is thematic; I go over some class of actions you
might want to do, and then mention some options you may choose to
succeed at doing these things.&lt;/p&gt;
&lt;h2&gt;Requirements&lt;/h2&gt;
&lt;p&gt;In this tutorial, I assume that you have a Linux system up and running
(...and here, the term "Linux" is used to mean a UNIX or UNIX-like
system that has certain core utilities, &lt;em&gt;not&lt;/em&gt; the kernel itself or
something highly technical like that). For something that just works,
&lt;a href="https://manjaro.org/"&gt;Manjaro&lt;/a&gt; and &lt;a href="https://xubuntu.org/"&gt;Xubuntu&lt;/a&gt;
are some solid options. If you want to spend some more time
configuring things, you may want to try &lt;a href="https://captainalan.github.io/pelican-test/"&gt;installing Arch
Linux&lt;/a&gt;. Really, it
doesn't matter that much where you start because you are entering
Linux land where customizability is king.&lt;/p&gt;
&lt;h3&gt;Editors&lt;/h3&gt;
&lt;p&gt;What is a samurai without a sword? You need an editor! Most things on
Linux are configurable via a &lt;strong&gt;"dot file"&lt;/strong&gt;, so called because they
have a name that starts with a &lt;em&gt;dot&lt;/em&gt; (e.g. &lt;code&gt;.bashrc&lt;/code&gt;,
&lt;code&gt;.eslint&lt;/code&gt;...). You will need an editor to change these files. If you
are enthusiastic about learning Linux, you probably have some interest
in writing scripts or programs or some sort. You'll need an editor for
that too.&lt;/p&gt;
&lt;p&gt;Learning the basics of some editor is a skill you will not
regret. Editors like &lt;code&gt;vi&lt;/code&gt; and &lt;code&gt;nano&lt;/code&gt; can be found pretty much
anywhere. It probably won't be too difficult for you to grab a more
sophisticated editor like &lt;code&gt;vim&lt;/code&gt;, &lt;code&gt;emacs&lt;/code&gt;, or Visual Studio Code.&lt;/p&gt;
&lt;h2&gt;The GUI way&lt;/h2&gt;
&lt;p&gt;There is a big movement to make Linux systems intuitive and
"user-friendly", particularly for users coming from Windows and
Mac. No explanations needed here&amp;mdash;you can explore the menus and
built in softwares with any Linux distribution that comes built in
with a graphical desktop environment. &lt;/p&gt;
&lt;p&gt;There is no shame in using and enjoying a GUI. For many things, this
is the easiest way to get things done, particularly if you don't care
to do any special configuration. Examples of things I've recently used
GUI menus to configure:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Themes/fonts&lt;/li&gt;
&lt;li&gt;Wallpaper&lt;/li&gt;
&lt;li&gt;Keyboard shortcuts&lt;/li&gt;
&lt;li&gt;Joining wifi networks&lt;/li&gt;
&lt;li&gt;Sound/volume stuff&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Other tasks, such as managing software, is perhaps better done through
the Command Line Interface (CLI).&lt;/p&gt;
&lt;h2&gt;Whispering into the soul of your system&lt;/h2&gt;
&lt;p&gt;Lots of things on modern computers are "artifacts of engineering",
leftover remnants from designs of the past. One interesting example is
the "command line interface" typically accessed through a &lt;strong&gt;terminal&lt;/strong&gt;
(emulator).&lt;/p&gt;
&lt;p&gt;Computers used to look like this:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Computer Terminal" src="https://live.staticflickr.com/3708/10526021063_a47c368729_b.jpg"&gt;
&lt;p style="font-size: 0.9rem;font-style: italic;"&gt;&lt;a href="https://www.flickr.com/photos/15528623@N00/10526021063"&gt;"IMG_20131027_152921"&lt;/a&gt;&lt;span&gt;by &lt;a href="https://www.flickr.com/photos/15528623@N00"&gt;S. F.&lt;/a&gt;&lt;/span&gt; is licensed under &lt;a href="https://creativecommons.org/licenses/by-nc-sa/2.0/?ref=ccsearch&amp;atype=html" style="margin-right: 5px;"&gt;CC BY-NC-SA 2.0&lt;/a&gt;&lt;a href="https://creativecommons.org/licenses/by-nc-sa/2.0/?ref=ccsearch&amp;atype=html" target="_blank" rel="noopener noreferrer" style="display: inline-block;white-space: none;opacity: .7;margin-top: 2px;margin-left: 3px;height: 22px !important;"&gt;&lt;img style="height: inherit;margin-right: 3px;display: inline-block;" src="https://search.creativecommons.org/static/img/cc_icon.svg" /&gt;&lt;img style="height: inherit;margin-right: 3px;display: inline-block;" src="https://search.creativecommons.org/static/img/cc-by_icon.svg" /&gt;&lt;img style="height: inherit;margin-right: 3px;display: inline-block;" src="https://search.creativecommons.org/static/img/cc-nc_icon.svg" /&gt;&lt;img style="height: inherit;margin-right: 3px;display: inline-block;" src="https://search.creativecommons.org/static/img/cc-sa_icon.svg" /&gt;&lt;/a&gt;&lt;/p&gt;&lt;/p&gt;
&lt;p&gt;In more current times, the old way of interacting with computers is
emulated using what is usually called something like "terminal" or
"shell" on modern systems.&lt;/p&gt;
&lt;h3&gt;Need moar software&lt;/h3&gt;
&lt;p&gt;Most Linux distributions ship with a &lt;strong&gt;package manager&lt;/strong&gt;. &lt;/p&gt;
&lt;h3&gt;Exploring your filesystem&lt;/h3&gt;
&lt;p&gt;Typing stuff like &lt;code&gt;ls -la&lt;/code&gt; all the time can get very tiring. One way
to get around this problem is to define &lt;strong&gt;aliases&lt;/strong&gt; for commands you
commonly use.&lt;/p&gt;
&lt;p&gt;Another way to get around your file sytem is to use a &lt;strong&gt;file manager&lt;/strong&gt;
that runs on the command line (or within your favorite editor). For
example, there is &lt;a href="https://vifm.info/"&gt;&lt;code&gt;vifm&lt;/code&gt;&lt;/a&gt; for doing common
operations like moving, copying, and renaming files in a vim editor
like way. Emacs has the built in
&lt;a href="https://www.gnu.org/software/emacs/manual/html_node/emacs/Dired.html"&gt;&lt;code&gt;dired&lt;/code&gt;&lt;/a&gt;
mode to do these things.&lt;/p&gt;
&lt;h3&gt;Getting system info&lt;/h3&gt;
&lt;p&gt;To find out some quick information about your system and display it in
a pretty way, use your package manager to download and install
&lt;code&gt;screenfetch&lt;/code&gt;. There are of course other places to find all of this
information, but this is the easiest way to getting system info (that
also looks cool) akin to doing the "about my computer" stuff on
Windows or MacOS.&lt;/p&gt;
&lt;h2&gt;Finding more information&lt;/h2&gt;
&lt;p&gt;Are there things that you don't understand? How do you find
documentation for those things?&lt;/p&gt;
&lt;h3&gt;Clicking through menus&lt;/h3&gt;
&lt;p&gt;This is often how I learn more about the features of some program. You
may discover useful commands you never thought you needed if you take
the time to click through some menus.&lt;/p&gt;
&lt;p&gt;I've found this especially helpful in using widely used, large,
complex programs like GIMP (image manipulation) and Blender (3D
graphics).&lt;/p&gt;
&lt;h3&gt;Built-in help systems&lt;/h3&gt;
&lt;p&gt;Many pieces of software come with their own built in help
systems. Many (most?) users jump to searching the Internet for
answers, but becoming familiar with the built-in help system for some
software may be able to provide quicker, more specific answers if you
invest a little bit of time to learn how to use it.&lt;/p&gt;
&lt;p&gt;Documentation is often available for download for offline viewing. If
you have a 12 hour flight coming up, why not read a user manual until
you fall asleep? (either way, you win&amp;mdash;you learn something or you
get a good rest).&lt;/p&gt;
&lt;h3&gt;High quality online resources&lt;/h3&gt;
&lt;p&gt;Not all websites are created equal; finding the best websites can save
you a lot of time you'd otherwise spend sifting through crap.&lt;/p&gt;
&lt;p&gt;Rather than naïvely Googling how to do something on Linux, for
instance, it may be helpful to first consult the &lt;a href="https://wiki.archlinux.org/"&gt;Arch
Wiki&lt;/a&gt; for Linux related topics. This
resource can be useful even for non-Arch users that want to learn
about some topic and Linux. For instance, recently I wanted to see
what options were available for &lt;a href="https://wiki.archlinux.org/index.php/Optical_disc_drive#Ripping"&gt;ripping
CDs&lt;/a&gt;. The
Arch Wiki had lots of helpful information for doing that on my
(non-Arch) Debian-based system.&lt;/p&gt;
&lt;h2&gt;Resources&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://xahlee.info/linux/linux_index.html"&gt;Practical Linux Tutorial&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="Linux"></category></entry><entry><title>Approaches to computing</title><link href="https://captainalan.github.io/pelican-test/approaches-to-computing.html" rel="alternate"></link><published>2019-07-20T00:00:00-07:00</published><updated>2019-07-20T00:00:00-07:00</updated><author><name>Alan Wong</name></author><id>tag:captainalan.github.io,2019-07-20:/pelican-test/approaches-to-computing.html</id><summary type="html">&lt;p&gt;Updated 8/12/2019&lt;/p&gt;
&lt;h2&gt;An autobiographical account of using computers&lt;/h2&gt;
&lt;p&gt;Here's how I was introduced to computers&amp;mdash;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;We use specific programs to do specific things. MS word is for
writing papers. MS paint is for having fun making digital
drawings. Photoshop is for more serious digital paintings (and
editing photos …&lt;/p&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;p&gt;Updated 8/12/2019&lt;/p&gt;
&lt;h2&gt;An autobiographical account of using computers&lt;/h2&gt;
&lt;p&gt;Here's how I was introduced to computers&amp;mdash;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;We use specific programs to do specific things. MS word is for
writing papers. MS paint is for having fun making digital
drawings. Photoshop is for more serious digital paintings (and
editing photos). Games r fun.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;More or less, I continued to think this way even after I took my first
introduction to programming class (Java in High School). I was
introduced to programming using Integrated Development Environments
(IDEs); large applications that aim to bring all tools necessary for
writing programs together.&lt;/p&gt;
&lt;p&gt;At a certain point, however, I began to take note of the fact that I
could &lt;em&gt;use different programs to edit the same sorts of files&lt;/em&gt;. I
think I started to have these thoughts about graphics software. I
realized I could use various editing softwares to do some task like
&lt;em&gt;resizing an image&lt;/em&gt;. Wow, cool!&lt;/p&gt;
&lt;p&gt;As I thought of new things I wanted to do with computers, I became
more interested in software generally (specifically &lt;em&gt;free&lt;/em&gt; software,
as in &lt;em&gt;free beer&lt;/em&gt; because I didn't have a way to pay for stuff
online). I gradually learned more about programming generally, Linux,
and other related things.&lt;/p&gt;
&lt;p&gt;All of this has been a lot of fun. It has also caused some trouble for
me, working with other people and their computers. Could I help
someone do XYZ in Microsoft Word? No, because I was too busy fiddling
with LaTeX or Markdown. I guess I could help them Google it? More
recently, by investing lots of time into learning &lt;a href="https://www.gnu.org/software/emacs/emacs.html"&gt;GNU
emacs&lt;/a&gt;, I've neglected
to learn many useful things in &lt;a href="https://code.visualstudio.com"&gt;Microsoft's Visual Studio
Code&lt;/a&gt;, the de facto standard for web
development (my day job) these days.&lt;/p&gt;
&lt;p&gt;All of this rambling leads us to our main topic of
discussion&amp;mdash;&lt;em&gt;different approaches to computing&lt;/em&gt; and their
relative pros and cons.&lt;/p&gt;
&lt;h2&gt;Approaches to Computing&lt;/h2&gt;
&lt;p&gt;There are a lot of people like me who have messed around with a lot of
programs to do a lot of things and are not so super-good at using any
of them. We have fun with computers, get our work done, and are
excited to play around with new technologies (or rediscover) old ones.
Our abilities scale with effort, enthusiasm, and time. We "waste" a
lot of time on the computer in the sense that if we just stuck with a
few things, we could have gotten by with a lot less scattered know-how
and hours spent fiddling with configuration files.&lt;/p&gt;
&lt;p&gt;This leads us to another type of computer user...&lt;/p&gt;
&lt;h3&gt;The One Program Wonder&lt;/h3&gt;
&lt;p&gt;Certain pieces of software out there are very powerful.  If you can
use certain programs well, you can easily turn your visions in reality
(and find high paying work).&lt;/p&gt;
&lt;p&gt;Some people learn a small number of programs extremely well and don't
care about the rest. Consider a digital artist/designer that makes use
of Adobe Photoshop and Adobe Illustrator. This person has awesome
visual powers. With a Macbook pro and a big idea, they can move
mountains.&lt;/p&gt;
&lt;p&gt;This person might not know how to write a bash script, set up a
printer, or install an operating system. They may call tech support
for help. Are they n00b? Or, consider the hardcore gamer that
concentrates on one game and plays it very well. They may not know how
to do anything else on a computer, but in their domain they are an
unstoppable force.&lt;/p&gt;
&lt;h3&gt;Just make it werk&lt;/h3&gt;
&lt;p&gt;Then, there are people that believe that &lt;em&gt;by playing (video) games you
already lose&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Some people spend as little time with computers as possible. Often,
this works out just fine. These are users who can get away with
replacing a laptop or a desktop computer with a tablet. For these
users, the tablet does everything they would want a computer to do,
plus it is generally cheaper, it is more portable, and perhaps more
durable.&lt;/p&gt;
&lt;p&gt;Using mobile devices and tablets, there is often only one way really
to do things. There is a single way to do things like change settings,
enter/exit the application, etc. Often this involves clicking,
touching buttons, etc. For nerds, this may be terrible. They may
literally lose sleep over trying to do something in a way UI/UX
designers don't care about.&lt;/p&gt;
&lt;p&gt;"Just make it werk" users may just give up with their technology and
go socialize, work out, paint pictures, or do something else with
their time while nerds try to pretend Macbooks are Linux machines. &lt;/p&gt;
&lt;h2&gt;Self-reflection on my after-hours computing habits&lt;/h2&gt;
&lt;p&gt;After hours, I boot up Linux (see my &lt;a href="https://captainalan.github.io/pelican-test/arch-linux-install-for-n00bs.html"&gt;Arch Linux install
guide&lt;/a&gt;),
launch emacs (see my &lt;a href="https://gist.github.com/captainalan/d2d94f8ff88ba0c74e85560246d51fdf"&gt;config
file&lt;/a&gt;,
and proceed to write code, prose, and everything in between.  Would it
be better to (1) stay in Windows, (2) use a word processor to write
prose, and (3) use an IDE to write code?&lt;/p&gt;
&lt;p&gt;For quickly getting stuff done, I think that choosing these
conventional solutions would typically be better.&lt;/p&gt;
&lt;p&gt;When I consider an activity like &lt;em&gt;writing a letter&lt;/em&gt;, I get excited
about booting up Linux, formatting things nicely in LaTeX and playing
around with emacs commands. But TBH, it would be easier to just start
typing in MS Word or Libre office. I can adjust fonts and stuff to
make things look pretty good.&lt;/p&gt;
&lt;p&gt;I think about the "One Program Wonder". I think about the "Just make
it werk" user. These people are doing just fine. And I'm taking three
times as along as I need to to finish some task. But you just wait!
The &lt;em&gt;next&lt;/em&gt; time I have to do something similar, I'll be faster!&lt;/p&gt;
&lt;p&gt;...unless I'm messing around with some new software/configuration
again.&lt;/p&gt;</content><category term="Lifestyle"></category></entry><entry><title>Chairs suck.</title><link href="https://captainalan.github.io/pelican-test/chairs-suck.html" rel="alternate"></link><published>2019-07-20T00:00:00-07:00</published><updated>2019-07-20T00:00:00-07:00</updated><author><name>Alan Wong</name></author><id>tag:captainalan.github.io,2019-07-20:/pelican-test/chairs-suck.html</id><summary type="html">&lt;p&gt;I personally dislike using chairs most of the time. I'd rather sit on
the floor, stand, or walk around to work, reading, thinking,
socializing, etc. Strange? Seething in my dislike for chairs, I
decided to do a little "armchair" research on chairs to find out where
they came from and …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I personally dislike using chairs most of the time. I'd rather sit on
the floor, stand, or walk around to work, reading, thinking,
socializing, etc. Strange? Seething in my dislike for chairs, I
decided to do a little "armchair" research on chairs to find out where
they came from and why they are everywhere in WEIRD ("Western Educated
Industrial Rich Democratic") cultures.&lt;/p&gt;
&lt;p&gt;Did you know:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For many centuries, chairs were "a symbolic article of state and
  dignity rather than an article for ordinary use" (Wikipedia)&lt;/li&gt;
&lt;li&gt;The earliest images of chairs in China are from the sixth century,
  but even then sitting in chairs was rare (Wikipedia)&lt;/li&gt;
&lt;li&gt;Writing, multi-story buildings, paper money, and examinations all
    have a longer history than chairs in China!&lt;/li&gt;
&lt;li&gt;Chairs became mainstream in the West and spread especially fast
  during the time of the "Industrial Revolution" (Chair Institute)&lt;/li&gt;
&lt;li&gt;Nowadays, there are a lot of people &lt;a href="https://www.startstanding.org/sitting-new-smoking/"&gt;hating on
  "sitting"&lt;/a&gt;
  (i.e. chairs)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Dirty floors vs clean feet&lt;/h2&gt;
&lt;p&gt;Chairs are useful if you are wearing shoes, don't plan on taking them
off, and want to sit down. Note that it is nice to sit down on a bench
or chair to remove your footwear.&lt;/p&gt;
&lt;p&gt;Chairs are not so good if you want to sit on a rug or reach things
that are close to the floor. Removing sandals or slippers requires to
chairs.&lt;/p&gt;
&lt;p&gt;&lt;img alt="The Beatles observe George learning Sitar. July 1966." src="https://i.imgur.com/Ci5mHRE.jpg"&gt;&lt;br&gt;
(Source imgur)&lt;/p&gt;
&lt;h2&gt;Hot idea&lt;/h2&gt;
&lt;p&gt;Many common clothing items we wear were designed for purposes quite
unlike modern living. For example, long pants came from
horse-riding. Few people these days ride horses.&lt;/p&gt;
&lt;p&gt;Where I live (California), it is usually rather hot. Rather than
following dressing, eating, and sleeping habits of other hot climate
people, many (most?) Californians like to retreat to air conditioned
coffee shops and dress and act like they live in cooler European
(English/German/French?) places. Why?!&lt;/p&gt;
&lt;h2&gt;Good uses of chairs&lt;/h2&gt;
&lt;p&gt;Besides being required for being socially acceptable in a good many
places, there are a number of situations in which having a chair is
useful. To play the piano, for instance, it makes sense to sit on a
comfortably adjusted piano bench so you can reach the pedals under the
piano.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Doge cannot reach pedals" src="https://i.imgur.com/S6vXiNl.png"&gt;&lt;br&gt;
(Source imgur)&lt;/p&gt;
&lt;h2&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Wikipedia on &lt;a href="https://en.wikipedia.org/wiki/Chair"&gt;Chairs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Wikipedia on the &lt;a href="https://en.wikipedia.org/wiki/History_of_the_chair"&gt;History of the Chair&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://chairinstitute.com/history-of-the-chair/"&gt;"History of the
  Chair"&lt;/a&gt; from the
  Chair Institute&lt;/li&gt;
&lt;/ul&gt;</content><category term="Lifestyle"></category></entry><entry><title>I choose HTML</title><link href="https://captainalan.github.io/pelican-test/i-choose-html.html" rel="alternate"></link><published>2019-07-20T00:00:00-07:00</published><updated>2019-07-20T00:00:00-07:00</updated><author><name>Alan Wong</name></author><id>tag:captainalan.github.io,2019-07-20:/pelican-test/i-choose-html.html</id><summary type="html">&lt;p&gt;Before, I built &lt;a href="https://captainalan.github.io/me"&gt;my website in
React&lt;/a&gt;. Now, it is being
&lt;a href="https://captainalan.github.io"&gt;rebuilt&lt;/a&gt; in plain HTML/CSS (with some
help from Bootstrap and jQuery to make things like mobile
responsiveness less tedious). After spending a considerable amount of
time with fancy frameworks, why take a step "backwards"?&lt;/p&gt;
&lt;h2&gt;I got blocked?!&lt;/h2&gt;
&lt;p&gt;I …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Before, I built &lt;a href="https://captainalan.github.io/me"&gt;my website in
React&lt;/a&gt;. Now, it is being
&lt;a href="https://captainalan.github.io"&gt;rebuilt&lt;/a&gt; in plain HTML/CSS (with some
help from Bootstrap and jQuery to make things like mobile
responsiveness less tedious). After spending a considerable amount of
time with fancy frameworks, why take a step "backwards"?&lt;/p&gt;
&lt;h2&gt;I got blocked?!&lt;/h2&gt;
&lt;p&gt;I was trying out some different Linux distributions, and decided to
give the fully-free distro &lt;a href="https://trisquel.info"&gt;Trisquel&lt;/a&gt; a spin.
To my dismay, I found that &lt;a href="http://captainalan.github.io/me"&gt;&lt;em&gt;my own
site&lt;/em&gt;&lt;/a&gt; was blocked blocked for some
JavaScript-y reasons. It turns out that all sites that make use of
React (or at least &lt;code&gt;create-react-app&lt;/code&gt;, the tool I used to bootstrap my
site) are &lt;em&gt;blocked&lt;/em&gt; when &lt;a href="https://www.gnu.org/software/librejs/"&gt;certain sorts of
JavaScript&lt;/a&gt; are blocked.&lt;/p&gt;
&lt;p&gt;It is my goal to produce informative, unobtrusive websites that are
easily indexed, linked, downloaded, etc. If I can accomplish this goal
without freedom/privacy threatening software, why not choose simpler
tools?&lt;/p&gt;
&lt;h2&gt;Next steps&lt;/h2&gt;
&lt;p&gt;I am becoming more interested in &lt;strong&gt;static site generators&lt;/strong&gt; (such as
&lt;a href="https://blog.getpelican.com"&gt;Pelican&lt;/a&gt;, which was used to make this
site) because the HTML/CSS they spit out is compatible in most places
and they also make things like RSS feeds easy to do. I'll be trying
out various static generators in addition to writing plain HTML/CSS
and maybe some JavaScript.&lt;/p&gt;</content><category term="Interwebs"></category></entry><entry><title>Arch Linux Install for n00bs</title><link href="https://captainalan.github.io/pelican-test/arch-linux-install-for-n00bs.html" rel="alternate"></link><published>2019-06-02T00:00:00-07:00</published><updated>2019-06-02T00:00:00-07:00</updated><author><name>Alan Wong</name></author><id>tag:captainalan.github.io,2019-06-02:/pelican-test/arch-linux-install-for-n00bs.html</id><summary type="html">&lt;p&gt;In this tutorial, I will go through installing Arch Linux. These
instructions were tried out on both a virtual machine and an old
laptop. For further instructions and details, I recommend &lt;em&gt;resisting
the urge to reflexively search everything&lt;/em&gt;, and instead taking the
time to read through high-quality resources, such as …&lt;/p&gt;</summary><content type="html">&lt;p&gt;In this tutorial, I will go through installing Arch Linux. These
instructions were tried out on both a virtual machine and an old
laptop. For further instructions and details, I recommend &lt;em&gt;resisting
the urge to reflexively search everything&lt;/em&gt;, and instead taking the
time to read through high-quality resources, such as the (official)
Arch Wiki &lt;a href="https://wiki.archlinux.org/index.php/Installation_guide"&gt;installation
guide&lt;/a&gt;.  That
being said, the content in this article should be sufficient to get an
Arch System up and running&amp;em;I've used it multiple times to help me
setup new systems.&lt;/p&gt;
&lt;p&gt;I am closely following &lt;a href="https://www.youtube.com/watch?v=4PBqpX0_UOc"&gt;Full Arch Linux Install (SAVAGE Edition!)
Linux&lt;/a&gt; by Luke Smith (March 8,
2018).&lt;/p&gt;
&lt;p&gt;We will do a base installation of Arch Linux. Then we'll run &lt;a href="https://lukesmith.xyz"&gt;Luke
Smith's&lt;/a&gt; &lt;a href="https://larbs.xyz/"&gt;LARBS&lt;/a&gt; script to
get an awesome i3 tiling window manager setup from the outset.  (TODO:
Also -&amp;gt; Add instructions/links to a &lt;strong&gt;NEW&lt;/strong&gt; tutorial about getting a
Desktop Environment, emacs, etc. and choosing a different path).&lt;/p&gt;
&lt;h2&gt;Prerequisites&lt;/h2&gt;
&lt;p&gt;This tutorial is aimed at people with some exposure to Linux and/or command
line tools (e.g. using &lt;code&gt;brew&lt;/code&gt; under MacOS), but who would like to gain
greater control of their current computing setups. Here, I honor the maxim
that &lt;em&gt;knowledge is power&lt;/em&gt; and seek to empower you by getting you started
using Arch Linux and understanding the tools that you are using.&lt;/p&gt;
&lt;p&gt;You should know how to do basic things with &lt;code&gt;vi&lt;/code&gt; (or &lt;code&gt;vim&lt;/code&gt;, or some
other editor readily available in the
&lt;a href="https://en.wikipedia.org/wiki/Computer_terminal#Text_terminals"&gt;TTY&lt;/a&gt;,
such as &lt;code&gt;nano&lt;/code&gt;) because doing an Arch install will involve editing
some text files on the command line.&lt;/p&gt;
&lt;h2&gt;Installation Medium&lt;/h2&gt;
&lt;p&gt;Download the latest Arch linux ISO. The easiest thing to do is probably to
download from an HTTP mirror near your (physical) location and then install by CD, DVD, or USB.&lt;/p&gt;
&lt;p&gt;From Windows, creating your installation medium is easy. Right click
on the downloaded &lt;code&gt;.iso&lt;/code&gt; file and select "Burn disc image" to create
CD or DVD to create a your installation medium. Alternatively, you can
use &lt;a href="https://rufus.ie/"&gt;Rufus&lt;/a&gt; on Windows to create install media on
USB drives, SD cards, and more.&lt;/p&gt;
&lt;h2&gt;Booting with the installation medium&lt;/h2&gt;
&lt;p&gt;Restart your computer. You may have to go into your system BIOS to make sure you can boot from your installation medium.&lt;/p&gt;
&lt;h3&gt;Get an internet connection&lt;/h3&gt;
&lt;p&gt;If you are already connected to the Internet via an ethernet cable, there is
nothing to think about. If you are connecting via Wi-Fi, run:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;wifi-menu
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I can't help you anymore if you are connecting from McDonald's wifi... But on
a home network, you will be prompted for your Wi-Fi network's password.
Once you go through the options &lt;code&gt;wifi-menu&lt;/code&gt;, try out your network connection
with something like &lt;code&gt;ping google.com&lt;/code&gt;. Type &lt;code&gt;ctrl-c&lt;/code&gt; to exit when you are
done.&lt;/p&gt;
&lt;h3&gt;Time and date stuff&lt;/h3&gt;
&lt;p&gt;Run &lt;code&gt;timedatectl set-ntp true&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Note the 'prefix' &lt;em&gt;-ctl&lt;/em&gt; in the command above. Commands with &lt;em&gt;-ctl&lt;/em&gt;
have to do with &lt;em&gt;controlling&lt;/em&gt; system processes. A command we will see
later is
&lt;a href="https://wiki.archlinux.org/index.php/Systemd#Basic_systemctl_usage"&gt;&lt;code&gt;systemctl&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Partitioning your drive(s)&lt;/h2&gt;
&lt;p&gt;Now, let's partition our disks. &lt;strong&gt;Note&lt;/strong&gt;: I am assuming you are
installing Arch Linux on a computer you are OK with deleting all data
on. Go reboot and back up your files and stuff if you are not ready to
proceed yet.&lt;/p&gt;
&lt;p&gt;In any case you can, run &lt;code&gt;lsblk&lt;/code&gt; (or &lt;code&gt;fdisk -l&lt;/code&gt;) to "list all block
devices".&lt;/p&gt;
&lt;h3&gt;Creating new partitions&lt;/h3&gt;
&lt;p&gt;From &lt;code&gt;lsblk&lt;/code&gt;, you can identify the drive you want to install Arch Linux on.
This will probably be &lt;code&gt;/dev/sda&lt;/code&gt; if you are installing onto an old computer.&lt;/p&gt;
&lt;p&gt;Let's start changing things.  To begin, type &lt;code&gt;fdisk /dev/sda&lt;/code&gt;, where
'"&lt;code&gt;sda&lt;/code&gt;" corresponds to the &lt;strong&gt;drive&lt;/strong&gt; you wish to create a new
partition table on (don't do &lt;code&gt;fdisk /dev/sda123&lt;/code&gt;; this won't
work&amp;em;go ahead and try that if you don't believe me!).&lt;/p&gt;
&lt;p&gt;You will now be sent to a new prompt that looks something like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;Command (m for help):&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If there are existing partitions you may need to type &lt;code&gt;d&lt;/code&gt; to delete them.
Type &lt;code&gt;p&lt;/code&gt; to print partitions. Once you are done deleting existing stuff, type
&lt;code&gt;n&lt;/code&gt; at the prompt to make a new partition.&lt;/p&gt;
&lt;p&gt;We will now create the following partitions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Boot partition (200MB)&lt;/li&gt;
&lt;li&gt;SWAP partition (how much RAM you have, times 1.5)&lt;/li&gt;
&lt;li&gt;Root (25 GB or more)&lt;/li&gt;
&lt;li&gt;Home (everything else)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;After typing &lt;code&gt;n&lt;/code&gt;, you will be be prompted with a number of options. To create
the Boot partition, accept the first default option (&lt;code&gt;p&lt;/code&gt;) to create a new
primary partition. Accept &lt;code&gt;1&lt;/code&gt; as the default partition number. Accept the
default "First sector" location. For the "Last sector", enter &lt;code&gt;+200M&lt;/code&gt;. This means will be the &lt;em&gt;boot&lt;/em&gt; partition which we are allocating 200 MB for.&lt;/p&gt;
&lt;p&gt;Next, we will craete a &lt;strong&gt;swap partition&lt;/strong&gt;. Type &lt;code&gt;n&lt;/code&gt; again to get started.
Standard practice is to create a swap partition of about 1.5-2 times the
amount of RAM you have. I'll be using 4 GB for this. Accept the default
partion number (probably 2), default first sector, and for the last sector do
&lt;code&gt;+4G&lt;/code&gt; (where you replace "4" with however much memory you select for your
swap partition).&lt;/p&gt;
&lt;p&gt;We will now create a &lt;strong&gt;root partition&lt;/strong&gt; where all your programs will be
installed. A reasonable starting size for this is around 25 GB, though you
may need more if you like to install a lot of programs. I'll be using 64 GB.
Typing &lt;code&gt;n&lt;/code&gt; (and then pressing Enter), I accept the default for the partiton
number and the starting sector and then select &lt;code&gt;+64G&lt;/code&gt; for the last sector.&lt;/p&gt;
&lt;p&gt;Finally, we need to create a &lt;strong&gt;home partition&lt;/strong&gt; which will take up the rest
of your disk. Do &lt;code&gt;n&lt;/code&gt; for a new partition and then selct &lt;code&gt;p&lt;/code&gt; (rather than &lt;code&gt;e&lt;/code&gt;)
to create a new primary partition. Then, accept all the defaults that follow.&lt;/p&gt;
&lt;p&gt;We have now created four nice partitions using &lt;code&gt;fdisk&lt;/code&gt;. However, these are
not "commited" to disk yet. Write &lt;code&gt;w&lt;/code&gt; at the &lt;code&gt;Command (m for help):&lt;/code&gt; prompt
to write your partitions to your disk. Note that this will wipe everything on the disk.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; since we partitioned our disk, you can easily install a different linux distribution if you wanted; just re-write the &lt;code&gt;root&lt;/code&gt; partition and all your &lt;code&gt;home&lt;/code&gt; files will still be there.&lt;/p&gt;
&lt;p&gt;Type &lt;code&gt;lsblk&lt;/code&gt; to see how &lt;code&gt;fdisk&lt;/code&gt; changed your harddirve.&lt;/p&gt;
&lt;h2&gt;Making filesystems&lt;/h2&gt;
&lt;p&gt;We just partitioned our disks, but we need to set &lt;strong&gt;filesystems&lt;/strong&gt; to our
partitions.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;boot&lt;/code&gt;, &lt;code&gt;root&lt;/code&gt;, and &lt;code&gt;home&lt;/code&gt; partition (&lt;code&gt;sda1&lt;/code&gt;, &lt;code&gt;sda3&lt;/code&gt;, and &lt;code&gt;sda4&lt;/code&gt; if you
have been following the tutorial for) should be formatted to &lt;code&gt;ext4&lt;/code&gt;, a Linux
standard.&lt;/p&gt;
&lt;p&gt;Do &lt;code&gt;mkfs.ext4 /dev/sda1&lt;/code&gt;, &lt;code&gt;mkfs.ext4 /dev/sda3&lt;/code&gt;, and &lt;code&gt;mkfs.ext4 /dev/sda4&lt;/code&gt; to
set these partitions' filesystems.&lt;/p&gt;
&lt;p&gt;Now, for the swap partition do &lt;code&gt;mkswap /dev/sda2&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;Mounting stuff&lt;/h2&gt;
&lt;p&gt;Now that we have created partitions with appropriate filesystems, we need to
&lt;strong&gt;mount&lt;/strong&gt; things.&lt;/p&gt;
&lt;p&gt;First, do &lt;code&gt;mount /dev/sda3 /mnt&lt;/code&gt; to mount your root partition.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; at any point during this tutorial you may want to run &lt;code&gt;lsblk&lt;/code&gt; to see
*how your disks currently look.&lt;/p&gt;
&lt;p&gt;Type &lt;code&gt;ls /mnt&lt;/code&gt;. You should see something like &lt;code&gt;lost+found&lt;/code&gt; there.&lt;/p&gt;
&lt;p&gt;Let's make make some new directories to mount stuff. First do
&lt;code&gt;mkdir /mnt/boot&lt;/code&gt; create a mount point for our boot partition. Then, run
&lt;code&gt;mount /dev/sda1 /mnt/boot&lt;/code&gt; to do the actual mounting.&lt;/p&gt;
&lt;p&gt;Finally, do &lt;code&gt;mkdir /mnt/home&lt;/code&gt;. Run &lt;code&gt;mount /dev/sda4 /mnt/home&lt;/code&gt; to mount your
home partition.&lt;/p&gt;
&lt;h2&gt;Installing the base system&lt;/h2&gt;
&lt;p&gt;We now have all of our partitions and have mounted these partitions on our
file systems. Mounting allows us to modify the data on these partitions,
which means we can install softare (like Arch Linux!).&lt;/p&gt;
&lt;p&gt;Run &lt;code&gt;lsblk&lt;/code&gt; to see that all is as it should be.&lt;/p&gt;
&lt;h3&gt;The fun starts with &lt;code&gt;pacstrap&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Run &lt;code&gt;pacstrap /mnt base base-devel&lt;/code&gt; to install the base package and basic
development tools. If you want more things, add them like so to this command.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update December 8, 2019&lt;/strong&gt;: You may want to also install &lt;code&gt;linux&lt;/code&gt; and
&lt;code&gt;linux-firmware&lt;/code&gt; to make sure the latest Linux kernel and appropriate drivers
respectively are installed. Do this &lt;em&gt;before&lt;/em&gt; you install &lt;code&gt;grub&lt;/code&gt; (directions
below) or else you may not be able to boot your new installation.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pacstrap /mnt base base-devel vim emacs
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Running this command might take a while because it is installing an entire
base system.&lt;/p&gt;
&lt;h2&gt;Making an &lt;code&gt;fstab&lt;/code&gt; file&lt;/h2&gt;
&lt;p&gt;Earlier, we mounted a bunch of partitions manually. An &lt;code&gt;fstab&lt;/code&gt; file tells
Linux what to try to load (see &lt;code&gt;etc/fstab&lt;/code&gt;). Run &lt;code&gt;genfstab /mnt&lt;/code&gt;. This will
generate an &lt;code&gt;fstab&lt;/code&gt; file based on how &lt;code&gt;mnt&lt;/code&gt; looks. Running this command will
just output a bunch of stuff.&lt;/p&gt;
&lt;p&gt;We need to save these things to a file. Run
&lt;code&gt;genfstab -U /mnt &amp;gt;&amp;gt; /mnt/etc/fstab&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Now Arch Linux will know what goes where.&lt;/p&gt;
&lt;h2&gt;Making our installation bootable&lt;/h2&gt;
&lt;p&gt;Run &lt;code&gt;arch-chroot /mnt&lt;/code&gt; to change our root. This will change our Arch root to
our new &lt;code&gt;/mnt&lt;/code&gt; directory! Before, we were running from our installation
medium, now we are running from our actual installation!&lt;/p&gt;
&lt;h3&gt;I needs Interwebs&lt;/h3&gt;
&lt;p&gt;Let's install some stuff. First, let's install &lt;code&gt;NetworkManager&lt;/code&gt; by typing &lt;code&gt;pacman -S networkmanager&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Next, type &lt;code&gt;systemctl enable NetworkManager&lt;/code&gt; to start &lt;code&gt;NetworkManager&lt;/code&gt;
whenever you log in.&lt;/p&gt;
&lt;h3&gt;GRUB Bootloader&lt;/h3&gt;
&lt;p&gt;Run &lt;code&gt;pacman -S grub&lt;/code&gt; to install GRUB, our bootloader. This is important!&lt;/p&gt;
&lt;p&gt;After this finishes, run &lt;code&gt;grub-install --target=i386-pc /dev/sda&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Once this is done, do &lt;code&gt;grub-mkconfig -o /boot/grub/grub.cfg&lt;/code&gt; to make a config
file. (This might be done automatically.)&lt;/p&gt;
&lt;h3&gt;Setting a password&lt;/h3&gt;
&lt;p&gt;Run &lt;code&gt;passwd&lt;/code&gt; to set a root password.&lt;/p&gt;
&lt;h3&gt;Setting a locale&lt;/h3&gt;
&lt;p&gt;Use your text editor (here I use &lt;code&gt;vim&lt;/code&gt;) to edit &lt;code&gt;/etc/locale.gen&lt;/code&gt;. I do this
with &lt;code&gt;vim /etc/locale.gen&lt;/code&gt;. In this huge list of locales I uncommented&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;#en_US.UTF-8 UTF-8&lt;/span&gt;
&lt;span class="err"&gt;#en_US ISO-8859-1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;to...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;en_US.UTF-8 UTF-8&lt;/span&gt;
&lt;span class="err"&gt;en_US ISO-8859-1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;...in order to set my locale. Note, you can set multiple languages. Save and
exit this file.&lt;/p&gt;
&lt;p&gt;Next, run &lt;code&gt;locale-gen&lt;/code&gt; to read the conf file you just edited and generate a
file.&lt;/p&gt;
&lt;p&gt;Let's edit one more file to set our (default) language: &lt;code&gt;vim
/etc/locale.conf&lt;/code&gt;. I changed the contents of this file to:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;LANG=en_US.UTF-8&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Setting a timezone&lt;/h3&gt;
&lt;p&gt;By default, in &lt;code&gt;/etc/localtime&lt;/code&gt;, there are a bunch of time zones. We want to
link &lt;code&gt;/usr/share/zoneinfo/&lt;/code&gt; with our timezone.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;ln -sf /usr/share/zoneinfo/America/Los_Angeles /etc/localtime&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;...where of course you replace &lt;code&gt;.../America/Los_Angles...&lt;/code&gt; with where you are.&lt;/p&gt;
&lt;p&gt;If you travel somewhere else, you will rerun the &lt;code&gt;ln...&lt;/code&gt; command here to the
timezone of wherever you are going.&lt;/p&gt;
&lt;h3&gt;Setting a hostname&lt;/h3&gt;
&lt;p&gt;Finally, you need to set a name for your computer. Edit &lt;code&gt;/etc/hostname&lt;/code&gt; to
whatever you like. I will do &lt;code&gt;vim /etc/hostname&lt;/code&gt; and enter &lt;code&gt;arch-sama&lt;/code&gt; for a (weeby) hostname.&lt;/p&gt;
&lt;h3&gt;Going back to your installation medium...&lt;/h3&gt;
&lt;p&gt;Type &lt;code&gt;exit&lt;/code&gt; to go back to your installation medium.&lt;/p&gt;
&lt;p&gt;Then, to be safe type &lt;code&gt;umount -R /mnt&lt;/code&gt; to unmount your Arch installation (on
your harddrive).&lt;/p&gt;
&lt;h3&gt;Reboot!&lt;/h3&gt;
&lt;p&gt;Type &lt;code&gt;reboot&lt;/code&gt;. Remove your installation medium. You should boot to your new
installation.&lt;/p&gt;
&lt;h2&gt;LARBS&lt;/h2&gt;
&lt;p&gt;Here is the easy part. To get a pretty cool configuration right away, use
Luke Smith's &lt;a href="https://larbs.xyz"&gt;LARBS&lt;/a&gt; setup.&lt;/p&gt;
&lt;p&gt;Booting your new Arch setup, login as &lt;code&gt;root&lt;/code&gt;. You'll be prompted for your
password.&lt;/p&gt;
&lt;p&gt;Next, run&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;curl -LO larbs.xyz/larbs.sh  &lt;span class="c1"&gt;# Download the script&lt;/span&gt;
bash larbs.sh                &lt;span class="c1"&gt;# Run the script you just downloaded!&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Logging in&lt;/h3&gt;
&lt;p&gt;Login with the username and password you set in LARBS. To modify your system,
you'll probably need to use &lt;code&gt;su&lt;/code&gt; and the password you set for root in the
Arch install.&lt;/p&gt;
&lt;h3&gt;Troubleshooting LARBS install&lt;/h3&gt;
&lt;p&gt;If you aren't connected to the Internet, this step can be a pain in the ass.
Search the Arch Wiki for wisdom.&lt;/p&gt;
&lt;p&gt;If you run into issues with &lt;code&gt;xorg&lt;/code&gt;, search for answers related to your graphics
card. Using an older (around 2010) laptop with an NVIDIA graphics card, I had
to install the Nouveau drivers.&lt;/p&gt;
&lt;h2&gt;Checking your new system out&lt;/h2&gt;
&lt;p&gt;Make sure your &lt;code&gt;/etc/fstab&lt;/code&gt; came out correctly.&lt;/p&gt;
&lt;p&gt;Running &lt;code&gt;htop&lt;/code&gt; I found out that my SWAP partition wasn't being used
after following the above steps. Easy way to get SWAP working was to
install gparted (&lt;code&gt;sudo pacman -Syu gparted&lt;/code&gt;) and launch that (&lt;code&gt;sudo
gparted&lt;/code&gt;), then make sure the swap partiton I created had &lt;code&gt;SWAPON&lt;/code&gt;
(find option in menus). You can then &lt;code&gt;sudo swapon --show&lt;/code&gt; to see that
things are working correctly.&lt;/p&gt;
&lt;h3&gt;Hard Drive Related Troubleshooting&lt;/h3&gt;
&lt;h3&gt;Boot issues&lt;/h3&gt;
&lt;p&gt;In this article, I used an "old-school" style of partitioning drives, mounting
partitions, etc.  If you are having trouble booting, you may need to go into
your BIOS to make sure you are booting devices in the correct order. You may
also want to check that your &lt;code&gt;/boot&lt;/code&gt; directory (mounted to its own partition,
hopefully) is bootable. Look up how to add a boot &lt;strong&gt;flag&lt;/strong&gt; to do this. Two ways
are to use the &lt;code&gt;fdisk&lt;/code&gt; util introduced at the beginning of this tutorial, or do
get an install for another distro (e.g. Ubuntu) and use the graphical tools
(e.g. gparted) to assist you in doing that.&lt;/p&gt;
&lt;h4&gt;Messed up partitons?&lt;/h4&gt;
&lt;p&gt;I used the article "&lt;a href="https://www.tecmint.com/move-home-directory-to-new-partition-disk-in-linux/"&gt;move your home directory to a new partiton&lt;/a&gt;" as a guide. The same approach here can be used for all sorts of directory and partition shuffling.&lt;/p&gt;
&lt;p&gt;The basic procedure to move your &lt;code&gt;/home/&lt;/code&gt; to a new partition is to&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;create a new partition,&lt;/li&gt;
&lt;li&gt;copy your existing &lt;code&gt;/home&lt;/code&gt; directory there and verify this operation succeeded,&lt;/li&gt;
&lt;li&gt;remove the old files you just copied,&lt;/li&gt;
&lt;li&gt;mount the copied files on the correct (new) partition to &lt;code&gt;/home&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;save your configuration in &lt;code&gt;/etc/fstab&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;These operations will require &lt;code&gt;su&lt;/code&gt; permissions (e.g. through using &lt;code&gt;sudo&lt;/code&gt;).&lt;/p&gt;</content><category term="Linux"></category></entry><entry><title>HEHEHEHEHE</title><link href="https://captainalan.github.io/pelican-test/hehehehehe.html" rel="alternate"></link><published>2019-05-15T10:50:00-07:00</published><updated>2019-05-15T10:50:00-07:00</updated><author><name>Alan Wong</name></author><id>tag:captainalan.github.io,2019-05-15:/pelican-test/hehehehehe.html</id><content type="html">&lt;p&gt;It is a pleasure to edit in Markdown!&lt;/p&gt;
&lt;p&gt;Check out this animated pelican:&lt;/p&gt;
&lt;p&gt;&lt;img alt="A Pelican" src="https://i.imgur.com/ydhVJLu.gif"&gt;&lt;/p&gt;</content><category term="Fun"></category></entry><entry><title>Why Static Sites?</title><link href="https://captainalan.github.io/pelican-test/why-static-sites.html" rel="alternate"></link><published>2019-05-15T10:13:00-07:00</published><updated>2019-05-15T10:13:00-07:00</updated><author><name>Alan Wong</name></author><id>tag:captainalan.github.io,2019-05-15:/pelican-test/why-static-sites.html</id><summary type="html">&lt;p&gt;Updated 8/12/2019&lt;/p&gt;
&lt;p&gt;After half a year or so of learning all about dynamic websites (using
fancy new technology like Node.js), I've found myself returning to
good old-fashioned static sites for my personal projects. Here I'll go
through some reasons why.&lt;/p&gt;
&lt;h2&gt;Two approaches&lt;/h2&gt;
&lt;p&gt;Consider two scenarios:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;You write …&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;Updated 8/12/2019&lt;/p&gt;
&lt;p&gt;After half a year or so of learning all about dynamic websites (using
fancy new technology like Node.js), I've found myself returning to
good old-fashioned static sites for my personal projects. Here I'll go
through some reasons why.&lt;/p&gt;
&lt;h2&gt;Two approaches&lt;/h2&gt;
&lt;p&gt;Consider two scenarios:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;You write a program that produces content for that user when a
   user runs it&lt;/li&gt;
&lt;li&gt;You write a program that produces content; you then distribute that
   content to people that want it&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The first approach here is how a lot of &lt;em&gt;dynamic&lt;/em&gt; websites work. You
write &lt;strong&gt;server side code&lt;/strong&gt; in something like JavaScript (Node), PHP,
Python, etc. to produce webpages on the fly for users. To do this,
you may have to go through lots of trials and tribulations to get your
program ('website') up and running.&lt;/p&gt;
&lt;p&gt;The second approach is how &lt;em&gt;static sites&lt;/em&gt; work. The "programming"
involved (if any) is to generate content once. Compare this to
&lt;em&gt;compiling&lt;/em&gt; a high(er) level programming language into machine
code. Once you produce useful output, it is easy to distribute it
(there are many places, including GitHub pages, that can serve
&lt;strong&gt;static assets&lt;/strong&gt; for free).&lt;/p&gt;
&lt;p&gt;With dynamic websites, you might worry about hackers sending malicious
inputs into your website and blowing stuff up. With static websites,
this is not an issue. If you were really worried about one server
where your content is hosted, you could easily create &lt;strong&gt;mirror(s)&lt;/strong&gt; of
your content. Static sites deploy easily, without special
considerations about what will compile, what will be allowed,
etc. Everything is packaged up nicely and good to go.&lt;/p&gt;
&lt;h2&gt;Know your needs&lt;/h2&gt;
&lt;p&gt;For most people, static sites will do. Don't be pulled in by the buzz
words and hype of fancy platforms if all you need is some hosting for
HTML/CSS files and some images.&lt;/p&gt;
&lt;h3&gt;Priorities&lt;/h3&gt;
&lt;p&gt;Simplifying web development means having more time available to focus
on producing quality content, rather than wrestling with abstractions
and engineering-ish problems. &lt;/p&gt;
&lt;p&gt;Maybe you should write a math or engineering blog if you wanna do
either of those activities, respectively 😡&lt;/p&gt;</content><category term="Interwebs"></category></entry></feed>